*          DATA SET OSDEBE2    AT LEVEL 002 AS OF 03/07/81
*          DATA SET OSDEBE     AT LEVEL 001 AS OF 05/16/74              00001
OSDEBE   START 0                                                        00002
         USING *,8,9,12  USING 3 BASE REGS                              00003
         SPACE 5                                                        00004
*********************************************************************** 00005
*                                                                     * 00006
*                         O S D E B E                                 * 00007
*                                                                     * 00008
*********************************************************************** 00009
*                                                                       00010
*                                                                       00011
*  THE PURPOSE OF OSDEBE IS TO PROVIDE THE USER OF 360 OPERATING        00012
*  SYSTEM THE FLEXIBILITY OF THE ORIGINAL DEBE.  FLEXIBILITY CAN        00013
*  ONLY BE OBTAINED BY THE ELIMINATION OF DD CARDS.  ONLY ONE DD        00014
*  CARD IS NECESSARY FOR OSDEBE, A SYSPRINT DD CARD FOR THE UNIT        00015
*  THAT WILL BE USED AS THE OUTPUT WRITER.  ALL FUNCTIONS WHICH         00016
*  ARE AVAILABLE WITH DEBE ARE PROVIDED IN OSDEBE.                      00017
*                                                                       00018
*********************************************************************** 00019
*                                                                       00020
*  CORE REQUIREMENTS - ABOUT 33,000 BYTES, 20,000 OF WHICH IS USED      00021
*  AS AN I/O AREA, MOST OF WHICH IS USED FOR LARGE TAPE RECORDS.        00022
*                                                                       00023
*  ERROR RECOVERY - THE OPERATING SYSTEM PERFORMS ALL STANDARD          00024
*  ERROR RECOVERY.  IF IT CANNOT RECOVER FROM AN ERROR, OSDEBE          00025
*  WILL NOT EVEN TRY.                                                   00026
*                                                                       00027
*  ALL REPLIES TO OSDEBE ARE OF THE WTOR FORMAT,                        00028
*          REPLY 00,'TP'                                                00029
*  WHENEVER ANY INFORMATION IS REQUESTED BY OSDEBE, A REPLY OF          00030
*  'EOJ' WILL TERMINATE THE SUBROUTINE OF OSDEBE.  A REPLY OF 'EOJ'     00031
*  IN RESPONSE TO THE REQUEST FOR THE PROGRAM ID WILL TERMINATE         00032
*  OSDEBE AND CONTROL IS RETURNED TO THE OPERATING SYSTEM.              00033
*                                                                       00034
*  ONCE A ROUTINE IS RUNNING IN OSDEBE, IT CAN ONLY BE TERMINATED       00035
*  BY CANCELLING THE JOB, AND THE JOB MUST BE RESCHEDULED AGAIN.        00036
*  AN ALTERNATIVE TO CANCELLING THE JOB IS TO CAUSE AN I/O ERROR        00037
*  ON ONE OF THE UNITS BEING USED.  AN I/O ERROR WILL CAUSE THE         00038
*  SUBROUTINE OF OSDEBE TO TERMINATE, BUT OSDEBE WILL STILL BE          00039
*  IN CONTROL.                                                          00040
*                                                                       00041
*********************************************************************** 00042
         EJECT                                                          00043
         SAVE  (14,12)                                                  00044
BEGIN    BALR  8,0                                                      00045
         LA    2,6                 ALIGN BASE WITH USING STATMENT       00046
         SR    8,2                                                      00047
BEGIN1   EQU   *                                                        00048
         L     9,BASE9             LOAD THE BASE 9 REG                  00049
         L     12,BASE12                                                00050
         LA    14,SAVEAREA                                              00051
         ST    13,SAVEAREA+4                                            00052
         ST    14,8(0,13)                                               00053
         LR    13,14                                                    00054
         SPACE 2                                                        00055
*        GET PARM FIELD IF ANY                                          00056
         SPACE                                                          00057
         L     1,0(1)              GET POINTER TO LENGTH OF PARM        00058
         LA    1,0(1)              CLEAR SIGN BIT                       00059
         LH    2,0(1)              GET LENGTH OF PARM FIELD             00060
         LTR   2,2                 SEE IF IS ANY PARM INFO              00061
         BZ    NOPARM              BRANCH IF NO PARM                    00062
         STC   2,MVCPARM+1         STORE LENGTH OF PARM FIELD           00063
MVCPARM  MVC   ID(1),2(1)          MOVE PARM FIELD TO ID AREA           00064
NOPARM   EQU   *                                                        00065
         EJECT                                                          00066
*********************************************************************** 00067
*                                                                     * 00068
*  THIS ROUTINE WILL MODIFY ALL WTO AND WTOR MACROS FOR MCS SUPPORT.  * 00069
*                                                                     * 00070
*********************************************************************** 00071
         SPACE 2                                                        00072
         LA    1,BUMPMOD           GET ADDRESS TO START SCAN            00073
         LA    2,TDAREA            GET ADDRESS TO END SCAN              00074
MODIFY   CLI   0(1),X'45'          SEE IF BAL                           00075
         BNE   BUMPMOD             BRANCH NOT EQUAL                     00076
         CLI   1(1),X'10'          SEE IF REG 1                         00077
         BNE   BUMPMOD             BRANCH NOT EQUAL                     00078
         CLI   4(1),X'00'          SEE IF WTO                           00079
         BNE   NOTWTO              BRANCH NOT WTO                       00080
         MVC   6(1,2),=X'0400'     INSERT NCS FLAGS           ********* 00081
         B     BUMPMOD             GO LOOK FOR NEXT WTO OR WTOR         00082
NOTWTO   CLI   12(1),X'00'         SEE IF WTOR                          00083
         BNE   BUMPMOD             BRANCH NOT EQUAL                     00084
         MVC   14(1,2),=X'0400'    INSERT MCS FLAGS           ********* 00085
BUMPMOD  LA    1,2(1)              BUMP SEARCH ADRS                     00086
         CLR   2,1                 SEE IF FINISHED                      00087
         BH    MODIFY              BRANCH NOT FINISHED                  00088
         EJECT                                                          00089
         WTO   'FAIRCHILD DEBE VERSION 1'                               00090
         SPACE 2                                                        00091
         SPACE 2                                                        00092
*  GET CVT POINTER                                                      00093
         L     3,16             GET CVT POINTER                         00094
         MVC   SYSTYP(1),116(3)    STORE SYSTEM TYPE IN PROB PROG       00095
*  GET POINTER TO THE TCB POINTERS                                      00096
         L     2,0(0,3)                                                 00097
*  GET TCB POINTER                                                      00098
         L     3,4(0,2)                                                 00099
*  GET TCB ADDRESS FOR THE DEB'S                                        00100
         ST    3,INDEB                                                  00101
         ST    3,OUTDEB                                                 00102
         SPACE                                                          00103
FNDDCB   EQU   *                                                        00104
         B     DEBFND                                                   00105
         ABEND 1,DUMP                                                   00106
CODE     DS    0F                                                       00107
         DC    X'ABCFEDAD'                                              00108
DEBFND   EQU   *                                                        00109
         MVC   PMBBC(1),32(4)      GET FILE MASK                        00110
         MVC   PMBBC+1(6),36(4)    GET SEEK ARG TO IOB                  00111
         MVI   CHHR+3,1              SET RECORD ARG IN IOB              00112
         SPACE                                                          00113
         SR    1,1                                                      00114
         L     0,CODE                                                   00115
         SVC   254                                                      00116
         SPACE 2                                                        00117
*  ALL ROUTINES RETURN HERE WHEN THEY ARE FINISHED.                     00118
ASKAGN   EQU   *                                                        00119
         CLI   MVCPARM+1,0         SEE IF PARM USED                     00120
         BZ    PARM2               BRANCH IF PARM NOT USED              00121
PARMSW   TS    PARMSW+1            SEE IF 2ND TIME THROUGH              00122
         BC    4,EOJ               BRANCH 2 ND TIME THROUGH             00123
PARM2    EQU   *                                                        00124
         CLI   MVCPARM+1,0         SEE IF PARM USED                     00125
         BNZ   PARM1               BRANCH IF PARM USED                  00126
         SPACE 2                                                        00127
         XC    ID+2(L'ID-2),ID+2   CLEAR ID AREA                        00128
         WTOR 'ENTER RTN ID - XX OR EOJ - XXX',ID,40,REPLYECB           00129
         BAL   11,WAITANS    GO WAIT FOR A REPLY                        00130
         SPACE 2                                                        00131
PARM1    EQU   *                                                        00132
*        CLEAN UP AREAS FOR ALL ROUTINES                                00133
         SPACE 1                                                        00134
         XC    FILES,FILES         CLEAR FILES WORK AREA                00135
         NI    INIOB,X'42'         CLEAN UP IOB S                       00136
         NI    OUTIOB,X'42'        CLEAN UP IOB S                       00137
         NI    TD3+1,X'0F'   RESET SWITCHES SET IN TP ROUTINE           00138
         NI    TD6+1,X'0F'                                              00139
         SPACE 2                                                        00140
*        ROUTINE ID'S WHICH ARE SUPPORTED FOLLOW----                    00141
         SPACE 1                                                        00142
         OC    ID,=CL80' '        MAKE ALL CAPS                         00143
         CLC   ID(3),=C'EOJ'       IS THE USER FINISHED WITH OS DEBE    00144
         BE    EOJ                 IF YES--- RETURN TO OS               00145
         CLC   ID(2),=C'BF'        BACK SPACE FILE                      00146
         BE    BF                                                       00147
         CLC   ID(2),=C'BS'        BACK SPACE RECORD                    00148
         BE    BS                                                       00149
         CLC   ID(2),=C'CC'        CARD TO CARD                         00150
         BE    CC                                                       00151
         CLC   ID(2),=C'CP'        CARD TO PRINT                        00152
         BE    CP                                                       00153
         CLC   ID(2),=C'CT'        CARD TO TAPE                         00154
         BE    CT                                                       00155
         CLC   ID(2),=C'RW'        REWIND                               00156
         BE    RW                                                       00157
         CLC   ID(2),=C'SF'        FORWARD SPACE FILE                   00158
         BE    SF                                                       00159
         CLC   ID(2),=C'SR'        FORWARD SPACE RECORD                 00160
         BE    SR                                                       00161
         CLC   ID(2),=C'TC'        TAPE TO CARD                         00162
         BE    TC                                                       00163
         CLC   ID(2),=C'TD'        TAPE TO PRINT HEX                    00164
         BE    TD                                                       00165
         CLC   ID(2),=C'TP'        TAPE TO PRINT                        00166
         BE    TP                                                       00167
         CLC   ID(2),=C'TT'        TAPE TO TAPE                         00168
         BE    TT                                                       00169
         CLC   ID(2),=C'TF'        TAPE TO PRINT FORMATED               00170
         BE    TF                                                       00171
         CLC   ID(2),=C'WT'        WRITE TAPE MARK                      00172
         BE    WT                                                       00173
*                                                                       00174
*    EXTENDED  OPERATIONS ROUTINE                                       00175
*                                                                       00176
         CLC   ID(2),=C'FM'        SEE IF SHOULD WRITE FILE MARK        00177
         BNE   *+14                BRANCH IF NOT                        00178
         MVC   ID(2),=C'WT'        REPLACE FM WITH WT                   00179
         B     WT                  GO WRITE TAPE MARK                   00180
         CLC   ID(2),=C'TM'        SEE IF SHOULD WRITE FILE MARK        00181
         BE    *-16                REPLACE TM WITH WT                   00182
         CLC   ID(2),=C'BR'        SEE IF SHOULD BACKSPACE RECORD       00183
         BNE   *+14                BRANCH IF NOT                        00184
         MVC   ID(2),=C'BS'        REPLACE BR WITH BS                   00185
         B     BS                  GO BACKSPACE RECORD                  00186
         CLC   ID(2),=C'FF'        SEE IF SHOULD FOWARD SPACE FILE      00187
         BNE   *+14                BRANCH IF NOT                        00188
         MVC   ID(2),=C'SF'        SEE IF FORWARD SPACE FILE            00189
         B     SF                  GO FOWARD SPACE FILE                 00190
         CLC   ID(2),=C'RU'        SEE IF REWIND AND UNLOAD             00191
         BE    RU                  BRANCH IF REWIND AND UNLOAD          00192
         CLC   ID(1),=C'U'         SEE IF UNLOAD                        00193
         BE    RU                  IF YES GO UNLOAD                     00194
         CLC   ID(1),=C'R'         SEE IF REWIND                        00195
         BE    RW                  BRANCH ID YES                        00196
         CLC   ID(2),=C'CL'        SEE IF LABEL ROUTINE REQUESTED       00197
         BE    CLIP                BRANCH TO LABEL ROUTINE              00198
         CLC   ID(2),=C'LA'        SEE IF LABEL ROUTINE REQUESTED       00199
         BE    CLIP                BRANCH TO LABEL ROUTINE              00200
         CLC   ID(2),=C'FR'        SEE IF FORWARD SPACE RECORD          00201
         BNE   *+14                BRANCH IF NOT                        00202
         MVC   ID(2),=C'SR'        MOVE IN SR CHARACTERS                00203
         B     SR                  GO TO SR ROUTINE                     00204
*                                                                       00205
         WTO   'ROUTINE ID ENTERED IS NOT SUPPORTED- PLEASE RETRY'      00206
         B     ASKAGN                                                   00207
         SPACE 1                                                        00208
BASE9    DC    A(OSDEBE+4096)    ADD CON FOR SECOND BASE                00209
BASE12   DC    A(OSDEBE+8192)       ADD CON FOR THIRD BASE              00210
         SPACE 3                                                        00211
EOJ      L     13,4(0,13)                                               00212
         RETURN (14,12),RC=0                                            00213
         EJECT                                                          00214
*        SUB ROUTINE TO SEARCH FOR KEY LETTERS IN ROUTINE ID FIELD      00215
*        RETURN CONDITION CODE WILL BE EQUAL OR UNEQUAL                 00216
*                                                                       00217
*        FORMAT                                                         00218
*                 BAL 11,SEARCH       USED TO BRANCH TO THIS SUB-R      00219
*                 DC  C'A'            CHARACTER TO BE SEARCHED          00220
*                 DC  AL1(3)          LENGHT OF SEARCH                  00221
*                                                                       00222
SEARCH   STM   2,3,SHSAV           SAVE REG                             00223
         LA    2,ID                GET ADDRESS OF ID AREA               00224
         SR    3,3                 CLEAR REG                            00225
         IC    3,1(11)             GET LENGTH OF SEARCH                 00226
CLSHR    CLC   2(1,2),0(11)        SEE IF CHARACTER IS FOUND            00227
         BE    SEARET              BRANCH IF FOUND                      00228
         LA    2,1(2)              BUMP REG BY 1                        00229
         BCT   3,CLSHR             TRY AGAIN                            00230
SEARET   LM    2,3,SHSAV           RESTORE REGS                         00231
         B     2(11)               RETURN                               00232
SHSAV    DC    2F'0'               SAVE AREA                            00233
*                                                                       00234
*                                                                       00235
*  BACKSPACE A FILE ON TAPE                                             00236
         SPACE 1                                                        00237
BF        EQU   *                                                       00238
         BAL   10,TPOUTSET   DETERMINE WHICH TAPE UNIT AND SET UP       00239
BF1      EQU   *                                                        00240
         BAL   10,NBFILS           GET FILE CNT FRM ID FIELD            00241
         BO    SFEXCP              BRANCH AROUND MSG                    00242
         WTOR  'NUMBR OF FILES BACK SPACED - XXX',FILES+5,3,REPLYECB    00243
         BAL   11,WAITANS          GO WAIT FOR A REPLY                  00244
         B    SFEXCP                                                    00245
         SPACE 1                                                        00246
*  FORWARD SPACE A FILE ON TAPE                                         00247
         SPACE 1                                                        00248
SF       EQU   *                                                        00249
         BAL   10,TPOUTSET   DETERMINE WHICH TAPE UNIT AND SET UP       00250
SF1      EQU   *                                                        00251
         BAL   10,NBFILS           GET FILE CNT FRM ID FIELD            00252
         BO    SFEXCP              BRANCH AROUND MSG                    00253
         WTOR  'NUMBR OF FILES FRWRD SPACED - XXX',FILES+5,3,REPLYECB   00254
         BAL   11,WAITANS          GO WAIT FOR A REPLY                  00255
SFEXCP   EQU   *                                                        00256
         OC    FILES+5(3),=3C' '    MAKE UPPER CASE                     00257
         CLC   FILES+5(3),=C'EOJ'   SEE IF END OF ROUTINE               00258
         BE    ASKAGN              IF EQUAL EXIT ROUTINE                00259
         TM    FILES+5,C'0'         SEE IF NUMERIC                      00260
         BNO   ERMSGA              BRANCH TO ERROR MSG                  00261
         TM    FILES+6,C'0'       SEE IF NUMERIC                        00262
         BNO   ERMSGA              BRANCH TO ERROR MSG                  00263
         TM    FILES+7,C'0'       SEE IF NUMERIC                        00264
         BNO   ERMSGA              BRANCH TO ERROR MSG                  00265
         PACK  FILES(8),FILES(8)     PACK INPUT                         00266
         CVB   2,FILES              PUT NUMBER OF FILES IN REG          00267
REPT     EQU   *                                                        00268
         MVC   OUTCCW+8(8),SFCCW   MOVE IN SPACE FILE CCW               00269
         CLC   ID(2),=C'SF'        SEE IF WAS A SPACE FILE              00270
         BE    *+10                BRANCH IF SPACE FILE                 00271
         MVC   OUTCCW+8(8),BFCCW   MOVE IN BACK SPACE FILE CCW          00272
         BAL   11,IOOUT      GO EXECUTE THE CCW                         00273
         CLI   OUTECB,X'7F'  WAS EVERYTHING OK                          00274
         BE    *+8                 GO PERFORM NOOP                      00275
         B     TAPERR              BRANCH TO ERROR ROUTINE              00276
         MVC   OUTCCW+8(8),NOOP    MOVE IN NO-OP CCW                    00277
         BAL   11,IOOUT            GO PERFORM NOOP TO WAIT FOR DEVICE   00278
         CLI   OUTECB,X'7F'        SEE IF NOOP OK                       00279
         BE    CNTFS               BRANCH IF OK                         00280
         B     TAPERR              BRANCH IF ERROR                      00281
ERMSGA   EQU   *                                                        00282
  WTO   'ERROR--- PLEASE ENTER 3 NUMERIC CHARACTERS FOR NUMBR OF FILES' 00283
         CLC   ID(2),=C'BF'        FIND WHICH ROUTINE ASKED             00284
         BE    BF1                 BRANCH TO THAT ROUTINE               00285
         B     SF1                 BRANCH TO THE OTHER                  00286
CNTFS    EQU   *                                                        00287
         BCT   2,REPT              BRANCH IF NOT ZERO                   00288
         B     ASKAGN              GET ANOTHER ROUTINE                  00289
         EJECT                                                          00290
*  BACKSPACE NNNN RECORDS ON TAPE                                       00291
         SPACE 1                                                        00292
BS       EQU   *                                                        00293
         SPACE 1                                                        00294
*  SKIP NNNN RECORDS ON TAPE                                            00295
         SPACE 1                                                        00296
SR       EQU   *                                                        00297
         BAL   10,TPOUTSET   DETERMINE WHICH TAPE UNIT AND SET UP       00298
         SPACE 2                                                        00299
* THE FOLLOWING CODE IS FOR SEARCHING A RECORD COUNT WHEN A ONE         00300
* LINE ENTRY IS USED.                                                   00301
         SPACE 1                                                        00302
         LA    2,ID                GET ADDRESS OF SEARCH                00303
         LA    3,L'ID-5            GET LENGTH OF SEARCH                 00304
RCRCNT   TM    2(2),X'C0'          SEE IF ALPHAMERIC                    00305
         BO    BUMPR               BRANCH IF ALPHAMERIC                 00306
         TM    7(2),X'C0'          SEE IF ALPHAMERIC                    00307
         BO    BUMPR               BRANCH IF ALPHAMERIC                 00308
         LA    4,4                GET NUMBER OF CHARACTERS              00309
         BAL   11,ALPMRIC         GO SEE IF ALBHAMERIC                  00310
         BNO   BUMPR              BRANCH NOT ALPHAMERIC                 00311
         MVC   FILES+4(4),3(2)          MOVE REC CNT TO CNT AREA        00312
         B     BYRCRD              BRANCH AROUND REQUEST FOR RECORD CNT 00313
BUMPR    LA    2,1(2)              BUMP SEARCH ADDRESS                  00314
         BCT   3,RCRCNT            LOOK AGAIN                           00315
         SPACE 2                                                        00316
RECRTY WTOR 'NUMBR OF REC''S TO BE SKIPPED - XXXX',FILES+4,4,REPLYECB   00317
         BAL   11,WAITANS    GO WAIT FOR A REPLY                        00318
BYRCRD   OC    FILES+4(3),=3C' '   MAKE ALL CAP'S                       00319
         CLC   FILES+4(3),=C'EOJ'  SEE IF SHOULD END THIS ROUTINE       00320
         BE    ASKAGN              YES,EXIT THIS ROUTINE                00321
         TM    FILES+4,X'F0'       SEE IF NUMERIC ENTRY                 00322
         BZ    ENTERR              BRANCH IF NOT                        00323
         TM    FILES+5,X'F0'       SEE IF NUMERIC ENTRY                 00324
         BZ    ENTERR              BRANCH IF NOT                        00325
         TM    FILES+6,X'F0'       SEE IF NUMERIC ENTRY                 00326
         BZ    ENTERR              BRANCH IF NOT                        00327
         TM    FILES+7,X'F0'       SEE IF NUMERIC ENTRY                 00328
         BZ    ENTERR              BRANCH IF NOT                        00329
         PACK  FILES(8),FILES(8)                                        00330
         CVB   2,FILES       PUT NUMBER OF REC'S IN REG 2               00331
         CLC   ID(2),=C'SR'                                             00332
         BE    SREX                                                     00333
BSEX     MVC   OUTCCW+8(8),BSCCW   SET UP BS CCW                        00334
BSAGN    EQU   *                                                        00335
         BAL   11,IOOUT      EXECUTE THE CCW                            00336
         CLI   OUTECB,X'7F'  EVERYTHING OK                              00337
         BE    BCT6          YES, DO AGAIN TILL COUNT = 0               00338
         B     TAPERR        NO, END THIS ROUTINE                       00339
BCT6     EQU   *                                                        00340
         BCT   2,BSAGN       DECREMENT THE COUNT AND DO AGAIN           00341
         B     ASKAGN        ALL FINISHED WITH THIS ROUTINE             00342
SREX     MVC   OUTCCW+8(8),SRCCW   SET UP SR CCW                        00343
         B     BSAGN               GO DO AGAIN                          00344
         SPACE 1                                                        00345
ENTERR   EQU   *                                                        00346
         WTO   'NUMBR OF REC''S ENTRY MUST BE 4 NUMERIC CHARACTERS'     00347
         B     RECRTY                                                   00348
         SPACE 1                                                        00349
         EJECT                                                          00350
*  CARD TO CARD REPRODUCE                                               00351
         SPACE 1                                                        00352
CC       EQU   *                                                        00353
         XC    SEQCNTR,SEQCNTR         CLEAR SEQ COUNTER                00354
         BAL   11,SEARCH           LOOK FOR CHARACTER                   00355
         DC    C'S'                SEE IF SHOULD SEQUENCE               00356
         DC    AL1(20)             LENGTH OF SEARCH                     00357
         MVI   SEQ+1,0             NO OP BRANCH                         00358
         BE    *+8                 BRANCH IF SHOULD SEQUENCE            00359
         MVI   SEQ+1,X'F0'         CAUSE BRANCH IF NOT TO SEQ           00360
         BAL   11,RDRUCB           GO SET UP CCW,DEB,DEV ADRS FOR RDR   00361
         BAL   11,PCHUCB           GO GET ADRS OF PUNCH                 00362
CCPNCH   EQU   *                                                        00363
CCLOOP   EQU   *                                                        00364
         BAL   11,IOIN       READ A CARD                                00365
         CLI   INECB,X'7F'         EVERYTHING OK                        00366
         BE    CC1                 YES, BRANCH                          00367
         TM    INSTAT+4,X'01'    EOF                                    00368
         BC    1,FEEDBK            GO FEED TWO BLANK CARDS              00369
         B     RDRERROR      READER ERROR, END THIS ROUTINE             00370
CC1      EQU   *                                                        00371
SEQ      NOP   *+8                 BRANCH NO SEQ                        00372
         BAL   10,SEQCRD           GO TO SEQ ROUTINE                    00373
         BAL   11,IOOUT      PUNCH A CARD                               00374
         CLI   OUTECB,X'7F'        EVERYTHING OK                        00375
         BE    CCLOOP        YES, LOOP                                  00376
*                                                                       00377
PCHERROR WTO   'PUNCH ERROR - EOJ'                                      00378
         B     ASKAGN                                                   00379
*                                                                       00380
FEEDBK   MVI   TDAREA,X'40'        INSERT BLANK                         00381
         MVC   TDAREA+1(79),TDAREA MAKE ALL BLANKS                      00382
         BAL   11,IOOUT            GO PUNCH BLANK                       00383
         CLI   OUTECB,X'7F'        SEE IF ERROR                         00384
         BNE   PCHERROR            BRANCH IF ERROR                      00385
         BAL   11,IOOUT            GO PUNCH BLANK                       00386
         CLI   OUTECB,X'7F'        SEE IF ERROR                         00387
         BNE   PCHERROR            BRANCH IF ERROR                      00388
         B     ASKAGN              GO GET NEXT ROUTINE                  00389
*                                                                       00390
         SPACE 5                                                        00391
*    SUB-ROUTINE TO SEQUENCE CARDS                                      00392
*    LINKAGE   BAL 10,SEQCRD                                            00393
SEQCRD   SR    11,11               CLEAR REG 11                         00394
         L     11,SEQCNTR          GET COUNT                            00395
         LA    11,10(11)           BUMP BY 10                           00396
         ST    11,SEQCNTR          PUT BACK COUNT                       00397
         CVD   11,UNPACKAR         UNPACK                               00398
         L     2,OUTCCW            GET ADDRESS OF OUTPUT AREA           00399
         UNPK  72(8,2),UNPACKAR(8) UNPACK SEQUENCE NUMBER               00400
         OI    79(2),X'F0'         MAKE Z ONE PRINTABLE                 00401
         BR    10                                                       00402
*                                                                       00403
UNPACKAR DC    D'0'                                                     00404
SEQCNTR  DC    F'0'                                                     00405
         EJECT                                                          00406
*********************************************************************** 00407
*                                                                     * 00408
*   THIS IS A COMMON ROUTINE FOR FINDING A CARD READER TO BE USED BY  * 00409
*   DEBE. IT WILL FIRST SCAN THE MESSAGE INPUT AREA FOR A READER      * 00410
*   DEVICE ADDRESS. FAILING THAT IT WILL SCAN THE UCB'S FOR AN UN-    * 00411
*   ALLOCATED ONLINE CARD READER. IF STILL NOT FOUND IT WILL ASK FOR  * 00412
*   THE ADDRESS OF A USABLE CARD READER.                              * 00413
*                                                                     * 00414
*   LINKAGE TO THIS ROUTINE IS  BAL 11,RDRUCB                         * 00415
*                                                                     * 00416
*********************************************************************** 00417
         SPACE                                                          00418
RDRUCBSV DC    11F'0'                                                   00419
         SPACE                                                          00420
RDRUCB   STM   1,11,RDRUCBSV       SAVE WORK REGISTERS                  00421
         SPACE                                                          00422
         LA    2,ID                GET ADRS OF MSG AREA                 00423
         LA    3,L'ID-5            GET LENTH OF SEARCH                  00424
RDRUC1   TM    2(2),X'C0'          SEE IF CRT IN FRONT IS ALPHA         00425
         BO    RDBPAG              BRANCH IF ALPHA                      00426
         TM    6(2),X'C0'          SEE IF CRT IN BACK  IS ALPHA         00427
         BO    RDBPAG              BRANCH IF ALPHA                      00428
         LA    4,3                 GET NUMBER OF CHARACTERS IN ADRS     00429
         LR    5,2                 GET ADRS OF SEARCH                   00430
RDALP    TM    3(5),X'C0'          SEE IF NOT ALPHAMERIC                00431
         BNO   RDBPAG              BRANCH IF NOT                        00432
         LA    5,1(5)              BUMP ADRS OF SEARCH                  00433
         BCT   4,RDALP             BRANCH TO LOOK AGAIN                 00434
         MVC   READER1(3),0(2)     GET CARD READER ADRS FROM MSG AREA   00435
RDUPPER  OC    READER1(3),=3X'40'  MAKE UPPER CASE                      00436
         B     RDRPCS              BRANCH TO CONTINUE PROCESSING        00437
RDBPAG   LA    2,1(2)              BUMP SEARCH ADRS                     00438
         BCT   3,RDRUC1            GO GET NEXT CHARACTERS               00439
         B     RDRADSNF            ASK FOR RDR ADRS                     00440
RDNXTUCB LA    6,2(6)              BUMP POINTER TO UCB ADRS TABLE       00441
         B     RUCBLOK             GO GET NEXT UCB ADRS                 00442
RDRPCS   EQU   *                                                        00443
         L     6,16                GET ADRS OF CVT                      00444
         L     6,40(6)             GET ADRS OF UCB ADRS TABLE           00445
RUCBLOK  LH    7,0(6)              GET UCB ADRS                         00446
         LTR   7,7                 SEE IF GOOD ADRS                     00447
         BZ    RDNXTUCB            BRANCH NO ADRS                       00448
         BM    RDDEVNF             BRANCH - NO UCB FOUND                00449
         CLI   2(7),X'FF'          SEE IF VALID UCB                     00450
         BNE   RDNXTUCB            GET NEXT UCB                         00451
         CLC   READER1(3),13(7)    SEE IF DEVICE ASKED FOR              00452
         BNE   RDNXTUCB            BRANCH NOT ASKED FOR                 00453
         CLI   18(7),X'08'         SEE IF UNIT RECORD DEVICE            00454
         BNE   RDNXTUCB            GET NEXT UCB                         00455
         CLI   19(7),X'01'         SEE IF 2540 READER                   00456
         BE    CR2540              BRANCH IF 2540                       00457
         CLI   19(7),X'06'         SEE IF 3505 READER                   00458
         BE    CR2540              BRANCH IF 3505 CARD READER           00459
         CLI   19(7),X'03'         SEE IF 1442 READ/PUNCH               00460
         BE    RD1442              BRANCH 1442 READ/PUNCH               00461
         CLI   19(7),X'04'         SEE IF 2501 CARD READER              00462
         BE    RD2501              BRANCH IF 2501                       00463
         CLI   19(7),X'05'         SEE IF 2520 READ/PUNCH               00464
         BE    RD2520              BRANCH IF 2520 READ/PUNCH            00465
         B     RDNXTUCB            GET NEXT UCB                         00466
RD2501   EQU   *                                                        00467
RD1442   EQU   *                                                        00468
RD2520   EQU   *                                                        00469
         CLI   16(7),X'01'         SEE IF PUNCH ONLY- FOR 2520/1442     00470
         BE    RDNXTUCB            GET NEXT UCB IF YES                  00471
CR2540   EQU   *                                                        00472
         TM    SYSTYP,X'40'        SEE IF PCP SYSTEM                    00473
         BO    RDCONTU             BRANCH IF YES                        00474
         TM    3(7),X'08'          SEE IF DEVICE IS ALLOCATED           00475
         BO    RDCLIPT             BRANCH ID ALLOCATED                  00476
RDOFLINE EQU   *                                                        00477
         CLI   3(7),X'C0'          SEE IF GOING OFFLINE                 00478
         BNE   RDOFCHK             BRANCH NOT GOING OFFLINE             00479
         MVC   RDDVOLN+32(3),13(7) GET DEVICE ADRS                      00480
RDDVOLN  WTO   'DEBE WAITING FOR DEVICE XXX TO GO OFFLINE'              00481
RDSTMR   EQU   *                                                        00482
         STIMER WAIT,BINTVL=TIME                                        00483
         CLI   3(7),X'C0'          SEE IF OFFLINE YET                   00484
         BE    RDSTMR              BRANCH IF NOT OFFLINE                00485
RDOFCHK  TM    3(7),X'80'          SEE IF ONLINE                        00486
         BZ    RDDVOK              BRANCH IF OFFLINE                    00487
         MVC   RDGNOFF+15(3),13(7) GET DEVICE ADRS                      00488
RDGNOFF  WTO   'DEVICE XXX CHANGED TO OFFLINE STATUS - DEBE'            00489
         NI    3(7),X'7F'          CHANGE TO OFFLINE                    00490
RDDVOK   EQU   *                                                        00491
         B     RDCONTU             USE DEVICE                           00492
TIME     DC    A(500)              WAIT FOR 5 SECONDS                   00493
*                                                                       00494
RDDEVNF  EQU   *                                                        00495
         MVC   RDNOUCB+38(3),READER1 GET ADRS SEARCHED                  00496
RDNOUCB  WTO   'READER UCB NOT FOUND FOR ADRS XXX'                      00497
RDRADSNF WTOR  'PLEASE ENTER READER ADRS - XXX',READER1,3,REPLYECB      00498
         BAL   11,WAITANS          WAIT REPLY                           00499
         B     RDUPPER             GET READER ADRS                      00500
*                                                                       00501
RDCLIPT  EQU   *                                                        00502
         MVC   ASGNMSG+22(3),13(7) GET DEVICE ADRS                      00503
ASGNMSG WTOR 'DEVICE CUU IS ALLOCATED, REPLY ''W'' TO WAIT, ''C'' TO CAX00504
               NCEL OR A NEW DEVICE ADRS ''CUU''',READER1,3,REPLYECB    00505
         BAL   11,WAITANS          WAIT FOR REPLY                       00506
         OC    READER1,=3X'40'     MAKE UPPER CASE                      00507
         CLI   READER1,C'C'        SEE IF SHOULD CANCEL                 00508
         BE    EOJ                 GO ASK FOR NEXT ROUTINE              00509
         CLI   READER1,C'W'        SEE IF WAIT                          00510
         BNE   RDRPCS              GO SEARCH UCB'S AGAIN                00511
RDSTAL   STIMER WAIT,BINTVL=TIME                                        00512
         TM    3(7),X'08'          SEE IF ALLOCATED                     00513
         BO    RDOFLINE            BRANCH IF ALLOCATED                  00514
*                                                                       00515
RDCONTU  EQU   *                                                        00516
         ST    7,INDEBMOD          STORE UCB ADRS IN DEB                00517
         CLI   19(7),X'03'         SEE IF 1442                          00518
         BE    RDCCW1RT            BRANCH IF 1442                       00519
         CLI   19(7),X'05'         SEE IF 2520                          00520
         BNE   RDCCW2RT            BRANCH TO 2540 CCW                   00521
RDCCW1RT MVC   INCCW(8),RD82CCW    MOVE IN CCW FOR  1442/2520           00522
         B     RDAMFN              BRANCH                               00523
RDCCW2RT MVC   INCCW(8),RD02CCW    MOVE IN CCW FOR  2540                00524
*                                                                       00525
RDAMFN   LM    1,11,RDRUCBSV       RESTORE                              00526
         BR    11                  RETURN TO USING ROUTINE              00527
         SPACE 2                                                        00528
RD82CCW  CCW   X'82',TDAREA,X'20',80  CCW FOR 1442/2520 READER          00529
RD02CCW  CCW   X'02',TDAREA,X'20',80  CCW FOR 2540 READER               00530
         EJECT                                                          00531
*********************************************************************** 00532
*                                                                     * 00533
*  THIS IS A COMMON ROUTINE FOR FINDING A CARD PUNCH ADDRESS TO BE    * 00534
*  USED BY DEBE.  IT WILL FIRST SCAN THE MESSAGE INPUT AREA FOR A     * 00535
*  PUNCH DEVICE ADDRESS. FAILING THAT IT WILL SCAN THE UCB'S FOR AN   * 00536
*  UN-ALLOCATED ONLINE CARD READER. IF STILL NOT FOUND IT WILL ASK    * 00537
*  FOR THE ADDRESS OF A USABLE CARD PUNCH.                            * 00538
*                                                                     * 00539
*  LINKAGE TO THIS ROUTINE IS  BAL 11,PCHUCB                          * 00540
*                                                                     * 00541
*********************************************************************** 00542
         SPACE 3                                                        00543
PCHUCB   STM   1,11,RDRUCBSV       SAVE WORK REGISTERS                  00544
         LA    2,ID                GET ADRS OF MSG AREA                 00545
         LA    3,L'ID-5            GET LENGTH OF SEARCH                 00546
PCHUC1   TM    2(2),X'C0'          SEE IF CHR IN FRONTIS ALPHA          00547
         BO    PCBPAG              BRANCH IF ALPHA                      00548
         TM    6(2),X'C0'          SEE IF CHR IN BACK IS ALPHA          00549
         BO    PCBPAG              BRANCH IF ALPHA                      00550
         LA    4,3                 GET NUMBER OF CHARACTERS IN ADRS     00551
         LR    5,2                 GET ADRS OF SEARCH                   00552
PCALP    TM    3(5),X'C0'          SEE IF ALPHAMERIC                    00553
         BNO   PCBPAG              BRANCH IF NOT                        00554
         LA    5,1(5)              BUMP ADRS OF SEARCH                  00555
         BCT   4,PCALP             BRANCH TO LOOK AGAIN                 00556
         MVC   PUNCH1(3),0(2)      GET CARD PUNCH ADRS FROM MSG AREA    00557
PCUPPER  OC    PUNCH1(3),=3X'40'   MAKE UPPER CASE                      00558
         B     PCHPCS              BRANCH TO CONTINUE PROCESSING        00559
PCBPAG   LA    2,1(2)              BUMP SEARCH ADRS                     00560
         BCT   3,PCHUC1            GO GET NEXT CARACTERS                00561
         B     PCRADSNF            ASK FOR PUNCH ADRS                   00562
PCHPCS   EQU   *                                                        00563
         L     6,16                GET ADRS OF CVT                      00564
         L     6,40(6)             GET ADRS OF UCB ADRS TABLE           00565
PUCBLOK  LH    7,0(6)              GET UCB ADRS                         00566
         LTR   7,7                 SEE IF GOOD ADRS                     00567
         BZ    PCNXTUCB            BRANCH NO ADRS                       00568
         BM    PCRADSNF      BR END OF TABLE SCAN AGAIN                 00569
         CLI   2(7),X'FF'          SEE IF VALID UCB                     00570
         BNE   PCNXTUCB            GET NEXT UCB                         00571
         CLI   18(7),X'08'         SEE IF UNIT RECORD DEVICE            00572
         BNE   PCNXTUCB            GET NEXT UCB                         00573
         CLI   19(7),X'02'         SEE IF 2540 PUNCH                    00574
         BE    PC2540              BRANCH IF 2540 PUNCH                 00575
         CLI   19(7),X'0C'         SEE IF 3525 PUNCH                    00576
         BE    PC2540              BRANCH IF 3525 PUNCH                 00577
         CLI   19(7),X'03'         SEE IF 1442 READ/PUNCH               00578
         BE    PC1442              BRANCH IF 1442 READ/PUNCH            00579
         CLI   19(7),X'05'         SEE IF 2520 READ/PUNCH               00580
         BE    PC2520              BRANCH IF 252O READ/PUNCH            00581
         B     PCNXTUCB            GET NEXT UCB                         00582
PC2520   EQU   *                                                        00583
PC1442   EQU   *                                                        00584
         TM    16(7),X'01'   SEE IF PUNCH ONLY FOR 2520.1442            00585
         BZ    PCNXTUCB      BR IF NOT PUNCH                            00586
PC2540   EQU   *                                                        00587
         TM    3(7),X'80'          SEE IF DEVICE IS ONLINE              00588
         BZ    PCSEASK             GET NEXT UCB                         00589
PCASK    TM    3(7),X'08'          SEE IF DEVICE ALLOCATED              00590
         BNO   PCCONTU             BRANCH NOT ALLOCATED                 00591
         B     PCCLIPT             BRANCH IF ALLOCATED                  00592
PCNXTUCB LA    6,2(6)              BUMP POINTER TO UCB ADRS TABLE       00593
         B     PUCBLOK             GO GET NEXT UCB ADRS                 00594
PCSEASK  CLC   PUNCH1(3),13(7)     SEE IF DEVICE ASKED FOR              00595
         BE    PCASK               DEVICE REQUESTED - IGNORE OFF LINE   00596
         B     PCNXTUCB            GET NEXT UCB                         00597
         SPACE                                                          00598
PCRADSNF WTOR  'ENTER PUNCH ADRS - XXX',PUNCH1,3,REPLYECB               00599
         BAL   11,WAITANS          WAIT REPLY                           00600
         B     PCUPPER             MAKE ADRS UPPER CASE                 00601
         SPACE                                                          00602
PCCLIPT  EQU   *                                                        00603
         XC    TDAREA(3),TDAREA    CLEAR INPUT MSG AREA                 00604
         TM    SYSTYP,X'40'        SEE IF PCP SYSTEM                    00605
         BO    PCCONTU             BRANCH IF PCP                        00606
         MVC   PSGNMSG+23(3),13(7) GET DEVICE ADRS                      00607
PSGNMSG  WTOR  'DEVICE XXX IS ALLOCATED, STOP WRITER THEN REPLY ''U'' TX00608
               O USE, ''C'' TO CANCEL OR A NEW DEVICE ADRS XXX',TDAREA,X00609
               3,REPLYECB                                               00610
         BAL   11,WAITANS          WAIT ANSWER                          00611
         OC    TDAREA(3),=3X'40'   MAKE UPPER CASE                      00612
         CLI   TDAREA,C'U'         SEE IF SHOULD USE                    00613
         BE    PCCONTU             BRANCH TO CONTINUE                   00614
         CLC   TDAREA,=C'EOJ'      SEE IF TO END ROUTINE                00615
         BE    EOJ                 BRANCH TO EOJ                        00616
         MVC   PUNCH1(3),TDAREA    GET NEW ADRS                         00617
         B     PCHPCS              LOOK AT UCBS AGAIN                   00618
         SPACE                                                          00619
PCCONTU  EQU   *                                                        00620
         ST    7,OUTDEBMD                                               00621
         CLI   19(7),X'03'         SEE IF 1442                          00622
         BE    PCCCWIRT            BRANCH NOT 1442                      00623
         CLI   19(7),X'05'         SEE IF 252O                          00624
         BE    PCCCWIRT            BRANCH NOT 2520                      00625
         B     PC2540CC            BRANCH TO 2540 CCW                   00626
PCCCWIRT MVC   OUTCCW(8),CCW1442   GET 1442/2520 CCW                    00627
         B     PCAMFN              BRANCH AROUND NEXT CCW               00628
PC2540CC MVC   OUTCCW(8),CCW2540   GET 2540 CCW                         00629
PCAMFN   LM    1,11,RDRUCBSV       RESTORE REGISTERS                    00630
         BR    11                  RETURN                               00631
         SPACE 2                                                        00632
CCW1442  CCW   X'81',TDAREA,X'20',80  CCW FOR 1442/2520 PUNCH           00633
CCW2540  CCW   X'41',TDAREA,X'20',80  CCW FOR 2540 PUNCH                00634
         EJECT                                                          00635
*  CARD TO PRINTER - 80/80 LIST                                         00636
         CNOP  0,4                                                      00637
         SPACE 1                                                        00638
CP       EQU   *                                                        00639
         BAL   11,RDRUCB           GO SET UP CCW,DEB,DEV ADRS FOR RDR   00640
CP2      EQU   *                                                        00641
         BAL   11,OPENPRNT   OPEN SYSPRINT IF NOT OPEN                  00642
         BAL   11,SKIPTO1    SKIP TO CHANNEL 1                          00643
CPLOOP   EQU   *                                                        00644
         BAL   11,IOIN       READ A CARD                                00645
         CLI   INECB,X'7F'   EVERYTHING OK                              00646
         BE    CP1           YES, BRANCH                                00647
         TM    INSTAT+4,X'01'      EOF?                                 00648
         BC    1,ASKAGN      YES, END THIS ROUTINE                      00649
RDRERROR WTO   'READER ERROR - EOJ'                                     00650
         B     ASKAGN              GET NEXT ROUTINE                     00651
CP1      EQU   *                                                        00652
         MVC   TDOUTAR(80),TDAREA      CLEAR UPPER PRINT LINE AFTER     00653
         MVI   TDOUTAR+80,C' '     PUT IN BLANK                         00654
         MVC   TDOUTAR+81(51),TDOUTAR+80  BLANK OUT AREA                00655
         BAL   11,TDPRINT    PRINT A CARD                               00656
         B     CPLOOP        LOOP                                       00657
         EJECT                                                          00658
*  CARD TO TAPE                                                         00659
         SPACE 1                                                        00660
CT       EQU   *                                                        00661
         BAL   11,RDRUCB           GO SET UP CCW,DEB,DEV ADRS FOR RDR   00662
*  SET UP TAPE'S DCB AND DEB                                            00663
         BAL   10,TPOUTSET   DETERMINE WHICH TAPE UNIT AND SET UP       00664
         MVC   OUTCCW+8(8),NOOP    MOVE IN NOOP CCW                     00665
         BAL   11,IOOUT            GO PERFORM NOP                       00666
         MVC   OUTCCW+8(8),CTCCW   SET UP WRITE CCW                     00667
         SR    2,2           CLEAR A COUNTER                            00668
CTLOOP   EQU   *                                                        00669
         BAL   11,IOIN       READ A CARD                                00670
         CLI   INECB,X'7F'         EVERYTHING OK                        00671
         BE    CT1           YES, BRANCH                                00672
         TM    INSTAT+4,X'01'      EOF                                  00673
         BC    1,CTEOJ1      YES, WRITE A TAPE MARK                     00674
         B     RDRERROR      READER ERROR, END THIS ROUTINE             00675
CT1      EQU   *                                                        00676
         LA    2,1(2)        INCREMENT A COUNTER                        00677
         BAL   11,IOOUT      WRITE TO TAPE                              00678
         CLI   OUTECB,X'7F'        EVERYTHING OK                        00679
         BE    CTLOOP        YES, LOOP                                  00680
         SPACE 1                                                        00681
*  IF OS CAN'T RECOVER FROM THE ERROR, I SURELY WON'T TRY               00682
         B     TAPERR                                                   00683
CTEOJ1   EQU   *                                                        00684
         MVC   COUNT(6),=X'402020202020'     EDIT THE COUNTER           00685
         CVD   2,TDWK                                                   00686
         ED    COUNT(6),TDWK+5                                          00687
         LA    1,MESSAGE                                                00688
         SVC   35      PRINT THE NUMBER OF CARDS THAT WENT TO TAPE      00689
CTEOJ    EQU   *                                                        00690
         MVC   OUTCCW+8(8),WTCCW       SET UP WTM CCW                   00691
         OI    OUTCCW+12,X'60'     CHAIN IT TO A NOP                    00692
         MVC   OUTCCW+16(8),=X'0300000020000001'                        00693
         BAL   11,IOOUT      WRITE A TAPE MARK                          00694
         CLI   OUTECB,X'7F'        EVERYTHING OK                        00695
         BNE   TAPERR        NO, BRANCH                                 00696
         BAL   10,RUOUT            GO REWIND OUTPUT IF ASKED            00697
         CLC   ID(2),=C'TT'        SEE IF TAPE TO TAPE                  00698
         BNE   *+8                 BRANCH IF NOT                        00699
         BAL   10,RUIN             GO REWIND INPUT IF ASKED             00700
         B     ASKAGN                                                   00701
         SPACE 4                                                        00702
*   TAPE TO CARD---WILL UNBLOCK AND PUNCH IN MULT OF 80 CHARACTERS      00703
         SPACE 1                                                        00704
TC       EQU   *                                                        00705
         XC    CNTARA,CNTARA       CLEAR FILE COUNTER                   00706
         XC    SEQCNTR,SEQCNTR         CLEAR SEQ COUNTER                00707
         BAL   11,SEARCH           LOOK FOR CHARACTER                   00708
         DC    C'S'                SEE IF SHOULD SEQUENCE               00709
         DC    AL1(20)             LENGTH OF SEARCH                     00710
         MVI   SEQ1+1,0            NO OP A BRANCH                       00711
         BE    *+8                 BRANCH IF SEQ                        00712
         MVI   SEQ1+1,X'F0'        SET UP FOR NO SEQ                    00713
         MVI   CNTARA,0            CLEAR FILE COUNTER                   00714
         MVI   SW80,0              RESET SWITCH                         00715
         MVI   SW81,0              RESET SWITCH                         00716
         MVI   SW82,0                   RESET SWITCH                    00717
         BAL   10,TAPINSET         DETERMINE WHICH TAPE UNIT AND SET UP 00718
         BAL   10,TPFILS           GO SEE HOW MANY FILES                00719
         BAL   11,PCHUCB           GO GET ADRS OF PUNCH                 00720
TCPCH    EQU   *                                                        00721
         SPACE                                                          00722
         MVC   SAVCCW(4),OUTCCW                                         00723
         MVC   INCCW+8(8),NOOP     MOVE IN NOOP CCW                     00724
         BAL   11,IOIN             GO PERFORM NOOP                      00725
         MVC   INCCW+8(8),TDINCCW  SET UP READ CCW                      00726
TCLOOP   EQU   *                                                        00727
         MVC   OUTCCW(4),SAVCCW                                         00728
         BAL   11,IOIN       READ A RECORD                              00729
         CLI   INECB,X'7F'         EVERYTHING OK                        00730
         BE    TC1            YES, BRANCH                               00731
         TM    INSTAT+4,X'01'      EOF                                  00732
         BC    8,TAPERROR               TAPE ERROR END ROUTINE          00733
         CNOP  0,4                      ALIGN                           00734
         BAL   10,NXTFL                 GO TO EOF SUBROUTINE            00735
         DC    A(TCLOOP)                CONTINUE RETURN ADDRESS         00736
TC1      EQU   *                                                        00737
         MVI   SW82,0                   RESET SWITCH                    00738
         LH    2,INSTAT+6          GET RESIDUAL COUNT                   00739
         LH    3,TDINCCW+6         GET BEGINNING COUNT                  00740
         SR    3,2                 GET BYTES READ IN                    00741
TC2      EQU   *                                                        00742
         C     3,=F'80'   SEE IF RESIDUAL CNT IS 80                     00743
         BNL   SEQ1   BRANCH IF AT LEAST 1 MORE CARD TO PUNCH           00744
         L     2,OUTCCW            GET ADDRESS OF OUTPUT AREA           00745
         LA    2,0(3,2)            BUMP BY BYES TO BLANK OUT            00746
TAG1     MVC   0(80,2),=80C' '      BLANK OUT FIELD                     00747
SEQ1     NOP   *+8                 BRANCH IF NO SEQ                     00748
         BAL   10,SEQCRD           GO TO SEQ ROUTINE                    00749
         BAL   11,IOOUT      PUNCH 80 BYTES OF RECORD                   00750
         CLI   OUTECB,X'7F'        EVERYTHING OK                        00751
         BE    CNTDN               GO SEE IF SHOULD PUNCH AGAIN         00752
         B     PCHERROR      PUNCH ERROR, END ROUTINE                   00753
SAVCCW   DC    F'0'                                                     00754
*                                                                       00755
CNTDN    EQU   *                                                        00756
         L     2,OUTCCW            GET ADDRESS OF OUTPUT AREA           00757
         LA    2,80(2)             BUMP BY 80                           00758
         ST    2,OUTCCW            STORE BUMPED OUTPUT ADDRESS          00759
         MVC   OUTCCW(1),SAVCCW                                         00760
*                                                                       00761
         S     3,=F'80'            SUBTRACT 80 FROM BYTES READ          00762
         BH    TC2                 BRANCH IF ALL OF RECORD NOT PUNCHED  00763
         BE    TCLOOP              GO READ NEXT RECORD                  00764
         TS    SW80                SEE IF MSG WRITTEN                   00765
         BNZ   NOTE2               BRANCH IF MSG WRITTEN ONCE           00766
         WTO   '***CAUTION***--CARD PUNCHED NOT MULT OF 80 CHARACTERS'  00767
NOTE2    EQU   *                                                        00768
       TS      SW81                SEE IF SECOND MESSAGE IS PRINTED     00769
         BNZ   TCLOOP              BRANCH IF MSG WRITTEN ONCE           00770
         WTO   'LAST WARNING--ANOTHER NON-80 CHARACTER CARD PUNCHED'    00771
         B     TCLOOP              GO READ NEXT RECORD                  00772
         SPACE 3                                                        00773
*        ROUTINE FOR SENSING EOF - TC,TP & TD                           00774
*                                                                       00775
*        LINKAGE FOR EOF SUBROUTINE                                     00776
*        BAL   10,NXTFL                 BRANCH TO SUBROUTINE            00777
*        DC    A(LABEL TO CONTINUE PROCESSING)                          00778
*                                                                       00779
NXTFL    EQU   *                                                        00780
         ST    10,SVRTNR           SAVE REG                             00781
         SR    11,11               CLEAR REG                            00782
         LH    11,CNTARA                GET CNT                         00783
         LA    11,1(11)            ADD ONE                              00784
         STH   11,CNTARA                STORE COUNT                     00785
         CVD   11,TDWK             CONVERT TO DEC                       00786
         UNPK  FICNT(3),TDWK+5(3)       UNPACK FILE CNT                 00787
         OI    FICNT+2,X'F0'       MAKE SIGN A ZONE                     00788
         CNOP  0,4                 ALIGN ON WORD                        00789
MSGFIL   WTO   'OS-DEBE COMPLETED FILE 000'                             00790
FICNT    EQU   *-5                 ADDRESS OF MSG CNT                   00791
         CLC   ID(2),=C'TP'   SEE IF TP                                 00792
         BE    TDRCT               BRANCH IF SAME                       00793
         CLC   ID(2),=C'TD'   SEE IF TD                                 00794
         BE    TDRCT               BRANCH IF SAME                       00795
         CLC   ID(2),=C'TF'  DOS OS OLP                                 00796
         BNE   FICNT1                                                   00797
         BAL   11,SKIPTO2                                               00798
         B     FICNT1                                                   00799
         SPACE   3                                                      00800
TDRCT    BAL   11,SPACE1           SPACE                                00801
         BAL   11,SPACE1           SPACE                                00802
         MVC   TDOUTAR+30(26),MSGFIL+8     GET FILE MSG                 00803
         BAL   11,TDPRINT          GO PRINT                             00804
         BAL   11,SKIPTO1          SKIP                                 00805
FICNT1   CLC   FILES+5(3),=C'ALL'      SEE IF ALL                       00806
         BNE   NXTFLA              BRANCH AROUND DBL FILE MAR TST       00807
         TS    SW82                     SET EOF SWITCH                  00808
         BC    4,*+8               SEE IF DOUBLE FILE MARK              00809
         B     RETNRT                   GET NEXT RECORD                 00810
         BAL   10,RUIN             GO SEE IF SHOULD REWIND/UNLOAD       00811
         B     ASKAGN              GO GET NEXT ROUTINE ID               00812
*                                                                       00813
NXTFLA   CLC   CNTARA(2),FILES+6    SEE IF FINISHED                     00814
         BL    RETNRT              BRANCH TO GET NEXT RECORD            00815
         BAL   10,RUIN             GO SEE IF SHOULD REIND/UNLOAD        00816
         CLC   ID(2),=C'TC'         SEE IF TAPE TO CARD                 00817
         BE    FEEDCD              GO FEED CARDS                        00818
         B     ASKAGN              BACK TO ROUTINE ID                   00819
*                                                                       00820
*        RETURN ROUTINE                                                 00821
RETNRT   L     11,SVRTNR           GET RETURN POINTER                   00822
         L     10,0(11)            GET RETURN ADDRESS                   00823
         CLC   ID(2),=C'TF'  OLP TAPES                                  00824
         BNE   RETNRT1                                                  00825
         LA    10,RDTAPE                                                00826
RETNRT1  DS    0H                                                       00827
         BR    10                  RETURN                               00828
*                                                                       00829
FEEDCD   EQU   *                                                        00830
         MVI   TDAREA,X'40'        GET BLANK                            00831
         MVC   TDAREA+1(79),TDAREA MAKE BLANKS                          00832
         LA    3,80                MAKE COUNT 80                        00833
         STH   3,OUTCCW+6          STORE COUNT                          00834
         BAL   11,IOOUT            FEED BLANK                           00835
         BAL   11,IOOUT            FEED BLANK                           00836
         B     ASKAGN              GET NEXT ROUTINE                     00837
*                                                                       00838
SVRTNR   DC    F'0'                RETURN ADDRESS SAVE AREA             00839
CNTARA   DC    H'0000'             FILE COUNTER                         00840
SW80     DC    X'00'               MESSAGE SW                           00841
SW81     DC    X'00'               MESSAGE SW                           00842
SW82     DC    X'00'                    FILES SWITCH                    00843
         SPACE 4                                                        00844
         EJECT                                                          00845
         CNOP  0,4                                                      00846
*  PRINT A TAPE                                                         00847
TP       EQU   *                                                        00848
*  TP USES THE TD ROUTINE WITHOUT THE HEX-TO-CHARACTER CONVERSION       00849
         OI    TD3+1,X'F0'         SET SWITCHES IN TD                   00850
         OI    TD6+1,X'F0'                                              00851
         SPACE 1                                                        00852
*  PRINT A TAPE IN HEX UNLESS SWITCHES SET BY TP                        00853
         SPACE 1                                                        00854
TD       EQU   *                                                        00855
         MVI   SW82,0         RESET EOF SWITCH                          00856
         BAL   11,OPENPRNT   OPEN SYSPRINT IF NECESSARY                 00857
         BAL   11,SKIPTO1     SKIP TO CHANNEL 1                         00858
         XC    CNTARA,CNTARA       CLEAR FILE COUNTER                   00859
*  SET UP TAPE'S DCB AND DEB                                            00860
         BAL   10,TAPINSET         DETERMINE WHICH TAPE UNIT AND SET UP 00861
         BAL   10,TPFILS           SEE HOW MANY FILES                   00862
         MVC   INCCW+8(8),NOOP     MOVE IN NOOP CCW                     00863
         BAL   11,IOIN             GO PERFORM NOOP                      00864
         MVC   INCCW+8(8),TDINCCW  SET UP READ CCW                      00865
         BAL   11,TDPRINT    PRINT THE HEADING LINE                     00866
TDAGN    BAL   11,SPACE1      SPACE A LINE                              00867
         SP    RECCNT(3),RECCNT(3) CLEAR THE RECORD COUNTER             00868
TDLOOP   EQU   *                                                        00869
         BAL   11,IOIN        READ A RECORD                             00870
         CLI   INECB,X'7F'         EVERYTHING OK                        00871
         BE    TD1           YES, BRANCH                                00872
         TM    INSTAT+4,X'01'      EOF                                  00873
         BC    1,TDEOJ       YES, GO END ROUTINE                        00874
         B     TAPERROR                                                 00875
         SPACE 1                                                        00876
*  IF OS CAN'T RECOVER FROM THE ERROR, I SURELY WON'T TRY               00877
TD1      EQU   *                                                        00878
         MVI   SW82,0         RESET EOF SWITCH                          00879
         LH    2,INSTAT+6          GET RESIDUAL COUNT                   00880
         LH    3,TDINCCW+6         GET BEGINING COUNT                   00881
         SR    3,2                 GET BYTES READ IN                    00882
UNFMTD   EQU   *                                                        00883
         CVD   3,TDWK                                                   00884
         MVI   TDOUTAR,C' '        CLEAR PRINT LINE                     00885
         MVC   TDOUTAR+1(131),TDOUTAR                                   00886
         MVC   TDOUTAR+102(23),RECHDG  SET UP LINE INFORMATION          00887
         ED    TDOUTAR+119(6),TDWK+5                                    00888
         AP    RECCNT(3),COND1(1)      INCREMENT RECORD COUNTER         00889
         ED    TDOUTAR+105(6),RECCNT                                    00890
         LA    2,TDAREA      GET READY FOR HEX CONVERSION               00891
         LA    5,TDAREA                                                 00892
         LA    7,80                                                     00893
TD6      BC    0,TD7         SET TO BRANCH BY TP ROUTINE                00894
*  R2 POINTS TO THE INPUT AREA                                          00895
*  R5 POINTS TO THE OUTPUT AREA                                         00896
         L     5,=A(TDAREA2)                                            00897
         LA    7,50                                                     00898
         BAL   14,UNPK       GO CONVERT 50 BYTES TO 100 HEX             00899
TD7      EQU   *                                                        00900
         CR    3,7           SHORT LINE TO BE PRINTED                   00901
         BL    TD3           YES, GO DO THE MOVE                        00902
         TM    TD6+1,X'F0'         SEE IF TP                            00903
         BNO   HX                  BRANCH IF NOT TP                     00904
         MVC   TDOUTAR(80),0(5)    DO 80 BYTE MVBE                      00905
         B     TDPR                                                     00906
HX       EQU   *                                                        00907
         MVC   TDOUTAR(100),0(5)   ELSE DO 100 BYTE MOVE                00908
TDPR     EQU   *                                                        00909
         BAL   11,TDPRINT     PRINT A LINE                              00910
         MVI   TDOUTAR,C' '        CLEAR OUTPUT AREA                    00911
         MVC   TDOUTAR+1(131),TDOUTAR                                   00912
         SR    3,7           DECREMENT BLKSIZE                          00913
         BC    12,TD9         BRANCH IF BLOCK FINISHED                  00914
         AR    2,7            ELSE, INCREMENT COUNTERS                  00915
         AR    5,7                                                      00916
         B     TD6           AND LOOP                                   00917
TD3      BC    0,TD4         SET TO BRANCH BY TP ROUTINE                00918
         LR    11,3          GET REMAINDER OF DATA IN 11                00919
         AR    11,3          DOUBLE IT BECAUSE IT'S UNPACKED            00920
         BCTR  11,0          DECREMENT ONE FOR THE MOVE                 00921
         EX    11,MVCOML                                                00922
         B     TDPR          GO PRINT SHORT LINE                        00923
TD4      EQU   *                                                        00924
         BCTR  3,0                                                      00925
         EX    3,MVCOML                                                 00926
         B     TDPR           GO PRINT SHORT LINE                       00927
MVCOML   MVC   TDOUTAR(0),0(5)        COMMON MOVE INSTRUCTION           00928
UNPK     EQU   *             CONVERT 50 BYTES TO 100 BYTES HEX          00929
         UNPK  0(15,5),0(8,2)                                           00930
         UNPK  14(15,5),7(8,2)                                          00931
         UNPK  28(15,5),14(8,2)                                         00932
         UNPK  42(15,5),21(8,2)                                         00933
         UNPK  56(15,5),28(8,2)                                         00934
         UNPK  70(15,5),35(8,2)                                         00935
         UNPK  84(15,5),42(8,2)                                         00936
         UNPK  98(3,5),49(2,2)                                          00937
         TR    0(100,5),TDPTABLE-240                                    00938
         BR    14                                                       00939
TD9      EQU   *                                                        00940
         BAL   11,SPACE1     SPACE A LINE AFTER WHOLE BLOCKED           00941
         B     TDLOOP                                                   00942
TDEOJ    EQU   *                                                        00943
         CNOP  0,4                 ALIGN ON WORD BOUNDRY                00944
         BAL   10,NXTFL            GO SEE IF MORE FILES                 00945
         DC    A(TDAGN)            RETURN ADDRESS                       00946
         B     ASKAGN                                                   00947
         EJECT                                                          00948
*********************************************************************** 00949
*                                                                     * 00950
*      THIS ROUTINE IS USED TO FORMAT PRINT A TAPE.  THE TAPE TO BE   * 00951
*      PRINTED MAY BE BLOCKED OR UNBLOCKED.                           * 00952
*                                                                     * 00953
*********************************************************************** 00954
         SPACE 1                                                        00955
         CNOP  0,4                                                      00956
TF       EQU   *                                                        00957
         MVI   SW82,0              RESET END OF FILE SWITCH             00958
         NI    OPENSW,0                                                 00959
         CLOSE (PRINT)                                                  00960
         MVI   PRINT+36,X'84'   ASA                                     00961
         BAL   11,OPENPRNT        OPEN SYSPRINT IF NECESSARY            00962
         MVI   OPCODE,C'1'   SKIP T  CHAN 1                             00963
         BAL   11,SKIPTO2                                               00964
         MVC   INCCW+8(8),TDINCCW  SET UP READ CCW                      00965
         BAL   10,TAPINSET         GET TAPE ADRS AND MODE               00966
         XC    CNTARA,CNTARA  CLEAR                                     00967
         BAL   10,TPFILS           SEE HOW MANY FILES                   00968
*                                                                       00969
RDTAPE   EQU   *                                                        00970
         BAL   11,IOIN             READ A TAPE RECORD                   00971
         CLI   INECB,X'7F'         WAS AN ERROR ENCOUNTERED             00972
         BE    TF1                 BRANCH NO ERROR                      00973
         TM    INSTAT+4,X'01'      SEE ID EOF                           00974
         BC    1,TFEOF                                                  00975
         B     TAPERROR            BRANCH TO ERROR MSG                  00976
         SPACE 1                                                        00977
*    FIND RECORD LENGTH AND FORMAT IF POSSABLE.                         00978
         SPACE 1                                                        00979
TF1      EQU   *                                                        00980
         XC    ADDR,ADDR     CLEAR                                      00981
         MVI   TFBYP+1,0     RESET                                      00982
         MVI   SW82,0              RESET EOF SWITCH                     00983
         LH    2,INSTAT+6          GET RESIDUAL COUNT                   00984
         LH    3,TDINCCW+6         GET BEGINNING COUNT                  00985
         SR    3,2                 RESULT IS LENGTH OF RECORD           00986
         SR    4,4                 CLEAR REGISTER                       00987
         SR    5,5                 CLEAR REGISTER                       00988
         LR    5,3                 GET RECORD LENGTH                    00989
         LA    6,133               PUT 133 INTO REG                     00990
         DR    4,6                 DIVIDE BY 133                        00991
         C     4,=F'0'             SEE IF WAS MULT OF 133               00992
         BE    FORMAT              BRANCH IF MULT OF 133                00993
         SR    4,4                                                      00994
         SR    5,5                                                      00995
         LR    5,3                                                      00996
         LA    6,134                                                    00997
         DR    4,6           DOS OLP                                    00998
         C     4,=F'0'       MULT OF 134                                00999
         BNE   ONE21                                                    01000
         LA    1,1                                                      01001
         ST    1,ADDR                                                   01002
         BCTR  6,0                                                      01003
         B     FORMAT                                                   01004
ONE21    DS    0H                                                       01005
*                                                                       01006
         SR    4,4                 CLEAR REGISTER                       01007
         SR    5,5                 CLEAR REGISTER                       01008
         LR    5,3                 GET RECORD LENGTH                    01009
         LA    6,121               PUT 121 INTO REG                     01010
         DR    4,6                 DIVIDE BY 121                        01011
         C     4,=F'0'             SEE IF WAS MULT OF 121               01012
         BNE   UNFMTD                                                   01013
FORMAT   DS    0H                                                       01014
         LR    7,6           SAVE                                       01015
         MVI   TDOUTAR,C' '                                             01016
         MVC   TDOUTAR+1(131),TDOUTAR                                   01017
         LA    5,TDAREA                                                 01018
         BCTR  6,0           DECR FOR MOVE                              01019
FMFPUT   DS    0H                                                       01020
         CLI   0(5),X'00'    HDR                                        01021
         BNE   TFENDTST                                                 01022
TMSG1    MVC   RNO(6),1(5)   REPORT NO                                  01023
         MVC   PNO(4),7(5)   PAPER NO                                   01024
         XC    TFECB,TFECB   CLEAR                                      01025
         MVI   TFID,C' '                                                01026
         MVC   TFID+1(39),TFID                                          01027
         LA    1,TFMSG                                                  01028
         SVC   35                                                       01029
         WAIT  ECB=TFECB                                                01030
         OC    TFID(2),=C'  '   UPPER CASE                              01031
         CLC   TFID(2),=C'GO'  PROCEED                                  01032
         BE    TFHDR                                                    01033
         CLC   TFID(2),=C'SF'  SPACE OLP FILE                           01034
         BNE   TMSG1                                                    01035
          MVI   TFBYP+1,X'F0'  SET BYPASS SW.                           01036
         B     TFHDR                                                    01037
TFENDTST  DS   0H                                                       01038
         CLI   0(5),X'FF'    TRAILER                                    01039
         BE    TFEOF                                                    01040
TFBYP    BC    0,TFHDR                                                  01041
         EX    6,MVCOML                                                 01042
         BAL   11,TDPRINTA                                              01043
         MVI   TDOUTAR,C' '                                             01044
         MVC   TDOUTAR+1(131),TDOUTAR                                   01045
TFHDR    DS    0H                                                       01046
         S     3,ADDR                                                   01047
         SR    3,7           DECR BLKSIZE                               01048
         BC    12,RDTAPE   BR IF BLK FINISHED                           01049
         A     5,ADDR                                                   01050
         AR    5,7           NXT                                        01051
         B     FMFPUT        NXT LINE                                   01052
TFEOF    DS    0H                                                       01053
         MVI   TFBYP+1,0     RESET                                      01054
         LH    11,CNTARA                                                01055
         LA    11,1(,11)                                                01056
         STH   11,CNTARA                                                01057
         CVD   11,TDWK                                                  01058
         UNPK  TFCNT(3),TDWK+5(3)                                       01059
         OI    TFCNT+2,X'F0'                                            01060
         CNOP  0,4                                                      01061
         WTO   'OS-DEBE COMPLETED FILE 000'                             01062
TFCNT    EQU   *-5                                                      01063
         CLC   FILES+5(3),=C'ALL'                                       01064
         BNE   FMTA                                                     01065
         TS    SW82                                                     01066
         BC    4,*+8                                                    01067
         B     RDTAPE                                                   01068
TFEND    BAL   10,RUIN                                                  01069
         NI    OPENSW,0                                                 01070
         CLOSE (PRINT)                                                  01071
         MVI   PRINT+36,X'82'   MACH                                    01072
         B     ASKAGN                                                   01073
FMTA     CLC   CNTARA(2),FILES+6   FINISHED                             01074
         BL    RDTAPE                                                   01075
         B     TFEND                                                    01076
TDPRINTA DS    0H                                                       01077
         PUT   PRINT,TDOUTAR                                            01078
         BR    11                                                       01079
*                                                                       01080
TFMSG    DS    0F                                                       01081
         DC    AL1(40)                                                  01082
         DC    AL3(TFID)                                                01083
         DC    A(TFECB)                                                 01084
         DC    AL2(TFLEN)                                               01085
         DC    H'0'                                                     01086
TFMSG0   DC    C'REPORT - '                                             01087
RNO      DC    C'XXXXXX'                                                01088
         DC    C' PAPER - '                                             01089
PNO      DC    C'XXXX'                                                  01090
         DC    C' REPLY GO WHEN READY'                                  01091
TFLEN    EQU   *-TFMSG0+4                                               01092
TFECB    DC    F'0'                                                     01093
ADDR     DC    F'0'                                                     01094
TFID     DC    CL40' '                                                  01095
         EJECT                                                          01096
*  TAPE TO TAPE COPY                                                    01097
         SPACE 1                                                        01098
TT       EQU   *                                                        01099
         BAL   10,TAPINSET    DETERMINE WHICH TAPE UNIT AND SET UP      01100
         BAL   10,TPFILS  GO SEE HOW MANY FILES TO PROCESS              01101
TTZ      BAL   10,TPOUTSET    DETERMINE WHICH TAPE UNIT AND SET UP      01102
         CLC INDEBMOD(4),OUTDEBMD    SEE IF THE SAME TAPE FOR IN - OUT  01103
         BE    STERR              BRANCH IF SAME TAPE                   01104
         MVC   INCCW+8(8),NOOP     MOVE IN NOOP CCW                     01105
         BAL   11,IOIN             GO PERFORM NOOP                      01106
         MVC   OUTCCW+8(8),NOOP    MOVE IN NOOP CCW                     01107
         BAL   11,IOOUT            GO PERFORM NOP                       01108
         MVC   INCCW+8(8),TDINCCW  SET UP READ CCW                      01109
         MVI   EOFSW,X'00'         RESET EOF SWITCH                     01110
         MVI   EOJTT+1,X'00'       NOP EOJ BRANCH                       01111
TTLOOP   EQU   *                                                        01112
         BAL   11,IOIN        READ A BLOCK                              01113
         CLI   INECB,X'7F'                                              01114
         BE    TT1           EVERYTHING OK, BRANCH                      01115
         TM    INSTAT+4,X'01'                                           01116
         BNO   TAPERROR            BRANCH IF NOT EOF                    01117
         BAL   10,TTEOF            GO SEE IF MORE FILES                 01118
         B     TTLOOP          GO GET NEXT RECORD                       01119
         SPACE 1                                                        01120
*  IF OS CAN'T RECOVER FROM THE ERROR, I SURELY WON'T TRY               01121
TAPERROR EQU   *                                                        01122
         BAL   10,RUIN             GO SEE IF TO REWIND INPUT            01123
         CLC   ID(2),=C'TT'        SEE IF TAPE TO TAPE                  01124
         BNE   *+8                 BRANCH IF NOT                        01125
         BAL   10,RUOUT            SEE IF SHOULD REWIND/UNLOAD          01126
         WTO   'INPUT TAPE ERROR - EOJ'                                 01127
         B     ASKAGN                                                   01128
         SPACE 3                                                        01129
STERR  WTO 'SAME TAPE FOR INPUT AND OUTPUT - USE ANOTHER OUTPUT TAPE'   01130
         B     TTZ                 GET NEW TAPE ADDRESS                 01131
         SPACE 3                                                        01132
TT1      LH    2,INSTAT+6          GET RESIDUAL COUNT                   01133
         LH    3,TDINCCW+6         GET BEGINNING COUNT                  01134
         SR    3,2           COMPUTE BYTES READ IN                      01135
         STH   3,TTCCWOUT+6        SET UP WRITE CCW                     01136
         MVC   OUTCCW+8(8),TTCCWOUT                                     01137
         MVI   EOFSW,X'00'         RESET EOF SWITCH                     01138
         BAL   11,IOOUT      WRITE A BLOCK                              01139
         CLI   OUTECB,X'7F'        EVERYTHING OK                        01140
         BE    TTLOOP        YES, LOOP                                  01141
         SPACE 1                                                        01142
*  IF OS CAN'T RECOVER FROM THE ERROR, I SURELY WON'T TRY               01143
TAPERR   EQU   *                                                        01144
         BAL   10,RUOUT            GO SEE IF TO REWIND OUTPUT           01145
         CLC   ID(2),=C'TT'        SEE IF TAPE TO TAPE                  01146
         BNE   *+8                 BRANCH IF NOT                        01147
         BAL   10,RUIN             SEE IF SHOULD REWIND/UNLOAD          01148
         WTO   'OUTPUT TAPE ERROR - EOJ'                                01149
         B     ASKAGN                                                   01150
         EJECT                                                          01151
RW       EQU   *                                                        01152
         BAL   10,TPOUTSET         DETERMINE WHICH TAPE UNIT AND SET UP 01153
         MVC   OUTCCW+8(8),RWCCW   SET UP REWIND CCW                    01154
         BAL   11,IOOUT            EXECUTE THE REWIND                   01155
         B     ASKAGN                                                   01156
         SPACE 3                                                        01157
WT       EQU   *                                                        01158
         BAL   10,TPOUTSET     DETERMINE WHICH TAPE UNIT AND SET UP     01159
         B     CTEOJ         GO WRITE A TAPE MARK                       01160
       SPACE 3                                                          01161
*    THIS ROUTINE IS USED TO CHANGE LABELS ON ALL DIRECT ACCESS DEVICES 01162
*    EXECPT THE 2321.                                                   01163
*    IT REQUIRES THE DISK PACK BE VARIED OFF LINE AND IS NOT BEING      01164
*    USED BY THE OPERATING SYSTEM. THIS ROUTINE IS BRANCHED TO WHEN ONE 01165
*    OF TWO SETS OF ROUTINE ID CHARACTERS ARE ENTERED. (CL OR LA)       01166
       SPACE 3                                                          01167
CLIP     EQU   *                                                        01168
         MVC   ID(2),=C'CL'        MAKE ROUTINE CHACTERS CONSISTANT     01169
         XC    TDAREA(80),TDAREA   CLEAR I/O AREA                       01170
         SPACE 2                                                        01171
* THE FOLLOWING CODE IS USED TO SEARCH THE ADDRESS TO BE CLIPPED        01172
* WHEN A ONE LINE ENTRY IS USED.                                        01173
         SPACE 1                                                        01174
CLIP1    LA    2,ID                GET ADDRESS OF SEARCH                01175
         LA    3,L'ID-6            GET LENGTH OF SEARCH                 01176
ADRCN    TM    2(2),X'C0'          SEE IF ALPHAMERIC                    01177
         BO    BUMA                BRANCH IF ALPHAMERIC                 01178
         TM    6(2),X'C0'          SEE IF ALPHAMERIC                    01179
         BO    BUMA                BRANCH IF ALPHAMERIC                 01180
         LA    4,3                GET NUMBER OF CHARACTERS              01181
         BAL   11,ALPMRIC         GO SEE IF ALPHAMERIC                  01182
         BNO   BUMA               BRANCH NOT ALPHAMERIC                 01183
         MVC   DISK(3),3(2)        MOVE IN ADDRESS FOR CLIP             01184
         B     BYCLP              BYPASS MSG                            01185
BUMA     LA    2,1(2)              BUMP ADRS OF SEARCH                  01186
         BCT   3,ADRCN             TRY AGAIN                            01187
         SPACE 2                                                        01188
         LA    2,ID                GET ADRS OF SEARCH                   01189
         LA    3,L'ID-8            GET LENGTH OD SEARCH                 01190
ADRCP    TM    2(2),X'C0'          SEE IF ALPHAMERIC                    01191
         BO    BUMB                BRANCH IF ALPHAMERIC                 01192
         LA    4,5                 GET NUMBER OF CHARACTERS             01193
         BAL   11,ALPMRIC          GO SEE IF ALPHAMERIC                 01194
         BNO   BUMB                BRANCH IF ALPHAMERIC                 01195
         MVC   TAPE(5),3(2)        MOVE IN ADRS FOR CLIP                01196
         B     BYCLP               BYPASS MSG                           01197
BUMB     LA    2,1(2)              BUMP SEARCH ADRS                     01198
         BCT   3,ADRCP             TRY AGAIN                            01199
         SPACE 2                                                        01200
         XC    ID+4(L'ID-5),ID+4   CLEAR PART OF MSG AREA               01201
 WTOR 'DEVICE ADRS TO BE CLIPPED OR EOJ (XXX OR XXXXX)',ID+5,5,REPLYECB 01202
         BAL   11,WAITANS          WAIT REPLY                           01203
         B     CLIP1               GO FIND ADRS NOW                     01204
         SPACE 2                                                        01205
BYCLP    OC    DISK(3),=3C' '           MAKE UPPER CASE                 01206
         CLC   DISK(3),=C'EOJ'          SEE IF SHOULD END ROUTINE       01207
         BE    ASKAGN                   GET NEW ID                      01208
         MVC   D1(3),DISK               GET DISK ADDRESS                01209
         BAL   14,UCBLOKUP              GET UCB ADDRESS OF DEVICE       01210
         LA    11,CLPCLR                LOAD ERROR RETURN ADDRESS       01211
         BNE   NODEVICE                 GO PRINT NO DEVICE MSG          01212
         ST    2,OUTDEBMD               STORE UCB ADDRESS IN DEB        01213
         CLI   18(2),X'20'              SEE IF DIRECT ACCESS            01214
         BNE   NOTDISK                  BRANCH TO NOT DISK MSG          01215
         CLI   19(2),X'05'         SEE IF 2321                          01216
         BE    NOTSUP              BRANCH IF 2321                       01217
         MVC   OUTDEVT(1),19(2)    PUT UNIT TYPE INTO DCB               01218
         OI    OUTDEVT,X'20'        FINISH IT                           01219
         MVC   OUTCCW(32),RDLABL   GET READ LABEL CCWS                  01220
         BAL   11,ENABLE           SEE IF SHLD PRINT ENABLE MSG         01221
         SPACE 1                                                        01222
         XC    TDAREA(80),TDAREA   CLEAR I/O AREA                       01223
         BAL   11,IOOUT            READ OLD LABEL                       01224
         CLI   OUTECB,X'7F'        SEE IF SUCCESSFUL                    01225
         BNE   RDDKER              BRANCH IF ERROR                      01226
         SPACE 1                                                        01227
         BAL   10,OLDMSG           GET AND PRINT OLD LABEL              01228
         BAL   10,ASKNEW           GO ASK FOR NEW LABEL                 01229
         B     GETNEW              BRANCH TO WRITE LABLE                01230
         SPACE 1                                                        01231
OLDMSG   EQU   *                                                        01232
         MVC   OLDLAB+16(6),TDAREA+4 GET OLD VOL ID TO MSG              01233
         MVC   OLDLAB+34(10),TDAREA+41 GET OLD OWNER ID                 01234
         CNOP  0,4                                                      01235
OLDLAB   WTO   'OLD VOL=XXXXXX  OLD OWNER=XXXXXXXXXX'                   01236
         TM    3(2),X'08'          SEE IF DEVICE ALLOCATED              01237
         BNO   NOTALCT             BRANCH IF NOT ALLOCATED              01238
         MVC   ALCTDVMG+15(3),13(2) GET DEVICE ADRS                     01239
ALCTDVMG WTO   'DEVICE DDD IS ALLOCATED AND WAS NOT CLIPPED'            01240
         B     RDNEW               BYPASS WRITING VOL AND OWNER INFO    01241
NOTALCT  EQU   *                                                        01242
         BR    10                  BACK TO USING ROUTINE                01243
         SPACE 1                                                        01244
ASKNEW   EQU   *                                                        01245
         XC    LABL,LABL           CLEAR VOL AND OWNER AREAS            01246
         MVC   OWNER(10),=10C' '   BLANK THE LABEL AREA                 01247
         WTOR 'ENTER NEW VOL ID AND OWNER ID OR EOJ (VVVVVV,OOOOOOOOOO),01248
               ',LABL,18,REPLYECB                                       01249
         BAL   11,WAITANS          WAIT REPLY                           01250
         BR    10                  BACK TO USING ROUTINE                01251
LABL     DC    XL17'00'            STORAGE SPACE FOR VOLAND OWNER INFO  01252
OWNER    EQU   LABL+7                                                   01253
         SPACE 1                                                        01254
         CNOP  0,4                                                      01255
GETNEW   EQU   *                                                        01256
         TM    LABL+6,X'40'        SEE IF LABL AND OWNER SEPTED         01257
         BO    FMTMSG              GO PRINT MSG                         01258
         MVC   TDAREA+4(6),LABL    GET NEW LABEL                        01259
         CLI   OWNER,X'40'         SEE IF OWNER INFO                    01260
         BE    BYIDNW              BRANCH IF NO OWNER INFO              01261
         MVC   TDAREA+41(10),OWNER MOVE IN OWNER ID                     01262
BYIDNW   EQU   *                                                        01263
         MVI   OUTCCW+CLPCCW-RDLABL,X'05' CHANGE TO WRITE DATA          01264
*                                                                       01265
         BAL   11,IOOUT            WRITE NEW LABEL                      01266
         CLI   OUTECB,X'7F'        SEE IF SUCCESSFUL                    01267
         BNE   WRDKER              BRANCH IF ERROR                      01268
*                                                                       01269
RDNEW    EQU   *                                                        01270
         MVI   OUTCCW+CLPCCW-RDLABL,X'06' CHANGE TO RD DATA             01271
         XC    TDAREA(80),TDAREA   CLEAR I/O AREA                       01272
         BAL   11,IOOUT            READ NEW LABEL                       01273
         CLI   OUTECB,X'7F'        SEE IF SUCCESSFUL                    01274
         BNE   LABCHK              BRANCH IF CANT READ NEW LABEL        01275
         BAL   10,NEWMSG           GO PRINT NEW LABEL                   01276
         B     ASKAGN                                                   01277
FMTMSG   WTO   'NON-ALPHAMERIC CHARACTER MUST SEPARATE VOL AND OWNER'   01278
         B     ASKNEW              GO ASK FOR INFO AGAIN                01279
         SPACE 1                                                        01280
NEWMSG   EQU   *                                                        01281
         MVC   NLABCK+19(6),TDAREA+4 MOVE IN NEW VOL INFO               01282
         MVC   NLABCK+37(10),TDAREA+41 MOVE IN NEW OWNER INFO           01283
         CNOP  0,4                                                      01284
NLABCK   WTO   'NEW VOL ID=VVVVVV  NEW OWNER=0000000000'                01285
         BR    10                  BACK TO USING ROUTINE                01286
*                                                                       01287
CLPCLR   XC    ID+2(L'ID-2),ID+2    CLEAR ID AREA                       01288
         B     CLIP                 BRANCH TO START OF ROUTINE          01289
*                                                                       01290
RDDKER   WTO   'ERROR READING OLD LABEL'                                01291
         B     ASKAGN                                                   01292
LABCHK   WTO   'ERROR READING NEW LABEL'                                01293
         B     ASKAGN                                                   01294
WRDKER   WTO   'ERROR WRITING NEW LABEL'                                01295
         B     ASKAGN                                                   01296
         SPACE 1                                                        01297
*        THE FOLLOWING CODE IS FOR THE TAPE LABEL ROUTINE               01298
         SPACE 1                                                        01299
NOTDISK  MVC   OUTDEVT(1),19(2)    PUT UNIT TYPE INTO DCB               01300
         BAL   10,TPOUTSET         SET UP FOR TAPE                      01301
         MVC   OUTCCW+8(8),RWCCW   MOVE IN REWIND CCW                   01302
         SPACE 1                                                        01303
         BAL   11,IOOUT            GO REWIND TAPE                       01304
         CLI   OUTECB,X'7F'        SEE IF OK                            01305
         BNE   ERRWND              BRANCH IF ERROR                      01306
         SPACE 1                                                        01307
         BAL   11,SEARCH           SEE IF SHOULD BYPASS OLD LABEL READ  01308
         DC    C'B'                KEY LETTER FOR SEARCH                01309
         DC    AL1(20)             LENGTH OF SEARCH                     01310
         BE    BYOLMSG             BRANCH IF FOUND                      01311
         SPACE 1                                                        01312
         MVC   OUTCCW+8(8),RDLBL   MOVE IN READ CCW                     01313
         BAL   11,IOOUT            GO ATTEMPT TO READ OLD LABEL         01314
         CLI   OUTECB,X'7F'        SEE IF READ OK                       01315
         BE    LBCK                BRANCH IF READ OK                    01316
         WTO   'COULD NOT READ OLD LABEL - DIFFERENT MODE OR NO LABEL'  01317
         B     BYOLMSG             BYPASS PRINTING OF LABEL             01318
         SPACE 1                                                        01319
LBCK     CLC   TDAREA(3),=C'VOL'   SEE IF LABEL                         01320
         BNE   BYOLMSG             BYPASS PRINTING OF OLD LABEL         01321
         BAL   11,OLDMSG           GO PRINT OLD LABEL                   01322
         SPACE 1                                                        01323
BYOLMSG  BAL   10,ASKNEW           GET NEW LABEL                        01324
         MVC   OUTCCW+8(8),RWCCW   MOVE IN REWIND CCW                   01325
         BAL   11,IOOUT            GO REWIND                            01326
         CLI   OUTECB,X'7F'        SEE IF OK                            01327
         BNE   ERRWND              BRANCH IF ERROR ON REWIND            01328
         SPACE 1                                                        01329
         XC    TDAREA(80),TDAREA   CLEAR I/O AREA                       01330
         MVC   TDAREA(4),=C'VOL1'  MOVE IN VOL1 INFO                    01331
         MVC   TDAREA+4(6),LABL    MOVE IN LABEL                        01332
         SPACE 1                                                        01333
         MVC   OUTCCW+8(8),WRLAB   MOVE IN WRITE LABEL CCW              01334
         BAL   11,IOOUT            GO WRITE TAPE                        01335
         CLI   OUTECB,X'7F'        SEE IF WRITE OK                      01336
         BNE   WRDKER              BRANCH ERROR WRITING NEW LABEL       01337
         SPACE 1                                                        01338
         XC    TDAREA(80),TDAREA   CLEAR I/O AREA                       01339
         MVC   OUTCCW+8(8),RDLBL   MOVE IN READ LABEL CCW               01340
         BAL   11,IOOUT            GO READ NEW LABEL                    01341
         CLI   OUTECB,X'7F'        SEE IF OK                            01342
         BNE   LABCHK              BRANCH TO ERROR MESSAGE              01343
         BAL   10,NEWMSG           GO PRINT NEW LABEL                   01344
         SPACE 1                                                        01345
         MVC   OUTCCW(8),WTCCW     MOVE IN TAPE MARK CCW                01346
         BAL   11,IOOUT            GO WRITE TAPE MARK                   01347
         CLI   OUTECB,X'7F'        SEE IF WRITE OK                      01348
         BE    TMERROR             BRANCH TO ERROR MSG                  01349
         SPACE 1                                                        01350
         MVC   OUTCCW+8(8),RWUN    MOVE IN REWIND/UNLOAD FOR TAPE       01351
         BAL   11,IOOUT            GO REWIND/UNLOAD FOR TAPE            01352
         CLI   OUTECB,X'7F'        SEE IF R/U OK                        01353
         BNE   ASKAGN              GO GET NEW ROUTINE                   01354
 WTO 'I/O ERROR ATTEMPTING REWIND/UNLOAD OF TAPE - NEW LABEL OK'        01355
         B     ASKAGN              GO GET NEW ROUTINE                   01356
ERRWND   WTO   'I/O ERROR ATTEMPTING TO REWIND TAPE'                    01357
         B     ASKAGN              GO GET NEW ROUTINE                   01358
TMERROR  WTO   'I/O ERROR ATTEMPTING TO WRITE TAPE MARK'                01359
         B     ASKAGN              GO GET NEW ROUTINE                   01360
DSKONL   WTO   'THE DEVICE ADRS ENTERED IS ONLINE'                      01361
         B     DSKOFM              BRANCH TO OTHER MSG                  01362
DSKASNG  WTO   'THE ADRS JUST ENTERED IS ASSIGNED BY OS'                01363
DSKOFM   WTO   '*** DEVICES USED FOR CLIP MUST BE OFFLINE ***'          01364
         B     CLPCLR              BRANCH BACK TO START OF ROUTINE      01365
NOTSUP   WTO   'DEVICE ADRS ENTERED IS NOT SUPPORTED FOR CLIPPING'      01366
         B     ASKAGN              GET NEXT ROUTINE                     01367
        SPACE  5                                                        01368
*  SUB-ROUTINE FOR REWIND OR REWIND/UNLOAD FOR INPUT TAPE               01369
*  LINKAGE     BAL 10,RUIN                                              01370
*                                                                       01371
RUIN     BAL   11,SEARCH           GO SEE IF SHOULD UNLOAD              01372
         DC    C'U'                KEY LETTER FOR REWIND/UNLOAD         01373
         DC    AL1(20)             LENGTH OF SEARCH                     01374
         BNE   RUIN1               BRANCH NO UNLOAD                     01375
         MVC   INCCW(8),RWUN       MOVE IN REWIND & UNLOAD CCW          01376
         BAL   11,IOIN             GO PERFORM I/O                       01377
         BR    10                  BACK TO USING ROUTINE                01378
RUIN1    BAL   11,SEARCH           GO SEE IF SHOULD REWIND              01379
         DC    C'R'                KEY LETTER FOR REWIND                01380
         DC    AL1(20)             LENGTH OF SEARCH                     01381
         BNE   0(10)               BACK TO USING ROUTINE                01382
         MVC   INCCW(8),RWCCW      MOVE IN REWIND CCW                   01383
         BAL   11,IOIN             GO PERFORM I/O                       01384
         BR    10                  BACK TO USING ROUTINE                01385
         SPACE 5                                                        01386
*   THIS SUB-ROUTINE IS USED TO CHECK THE READY BIT IN THE UCB OF I/O   01387
*   DEVICES.  WHEN NOT READY, A MESSAGE IS ISSUED TO ENABLE THE DEVICE  01388
*   WHICH WAS CHECKED.  REGISTER 2 MUST CONTAIN THE ADRS OF THE UCB.    01389
         SPACE 1                                                        01390
*   LINKAGE = BAL  11,ENABLE                                            01391
         SPACE 1                                                        01392
ENABLE   TM    6(2),X'40'          SEE IF DEVICE IS READY               01393
         BNO   0(11)               RETURN TO USING ROUTINE              01394
         MVC   ENMSG+26(3),13(2)   MOVE IN DEVICE TO MESSAGE            01395
         CNOP  0,4                                                      01396
ENMSG    WTO   '*** ENABLE DEVICE XXX - DEBE'                           01397
         BR    11                  RETURN TO USING ROUTINE              01398
         SPACE 5                                                        01399
*   SUB-ROUTINE FOR REWIND OR REWIND/UNLOAD FOR OUTPUT TAPE             01400
*   LINKAGE    BAL 10,RUOUT                                             01401
*                                                                       01402
RUOUT    BAL   11,SEARCH           GO SEE IF SHOULD UNLOAD              01403
         DC    C'U'                KEY LETTER FOR REWIND/UNLOAD         01404
         DC    AL1(20)             LENGTH OF SEARCH                     01405
         BNE   RUOUT1              BRANCH NO UNLOAD                     01406
         MVC   OUTCCW(8),RWUN      MOVE IN REWIND & UNLOAD CCW          01407
         BAL   11,IOOUT            GO PERFORM I/O                       01408
         BR    10                  BACK TO USING ROUTINE                01409
RUOUT1   BAL   11,SEARCH           GO SEE IF SHOULD REWIND              01410
         DC    C'R'                KEY LETTER FOR REWIND                01411
         DC    AL1(20)             LENGTH OF SEARCH                     01412
         BNE   0(10)               BACK TO USING ROUTINE                01413
         MVC   OUTCCW(8),RWCCW     MOVE IN REWIND CCW                   01414
         BAL   11,IOOUT            GO PERFORM I/O                       01415
         BR    10                  BACK TO USING ROUTINE                01416
*                                                                       01417
         SPACE 5                                                        01418
*                                                                       01419
*        REWIND AND UNLOAD ROUTINE                                      01420
*                                                                       01421
RU       EQU   *                                                        01422
         BAL   10,TPOUTSET   DETERMINE WHICH TAPE DRIVE                 01423
         MVC   OUTCCW+8(8),RWUN    SET UP REWIND & UNLOAD CCW           01424
         BAL   11,IOOUT      EXECUTE THE REWIND & UNLOAD                01425
         B     ASKAGN                                                   01426
*                                                                       01427
         SPACE 5                                                        01428
*        ROUTINE TO WRITE TAPE MARK AND/OR CHECK EOF                    01429
*                                                                       01430
*        ENTERED VIA BAL 10,TTEOF                                       01431
TTEOF    EQU   *                                                        01432
         CLC   FILES+5(3),=C'ALL'     SEE IF ALL                        01433
         BNE   FLCNT     BRANCH AROUND DOUBLE FILE MK TEST              01434
         TS    EOFSW               SET EOF SWITCH                       01435
         BZ    FLCNT               BRANCH IF NO PREVIOUS EOF            01436
         MVI   EOJTT+1,X'F0'       SET NOP TO BRANCH FOR EOJ            01437
FLCNT    EQU   *                                                        01438
         MVC   OUTCCW+8(8),WTCCW   SET UP WTM CCW                       01439
         OI    OUTCCW+12,X'60'     CHAIN IT TO A NOP                    01440
         MVC   OUTCCW+16(8),=X'0300000020000001'                        01441
         BAL   11,IOOUT            WRITE A TAPE MARK                    01442
         CLI   OUTECB,X'7F'        EVERY THING OK                       01443
         BNE   TAPERR              BRANCH ON ERROR                      01444
EOJTT    NOP   CTEOJ           GO WRITE TAPE MARK AND END ROUTINE       01445
         CLC   FILES+5(3),=C'ALL'  SEE IF PROCESS ALL                   01446
         BE    0(10)               BACK TO ROUTINE TILL 2 EOF S         01447
TCEOF    LH    2,FILES+6           GET NUMBER OF FILES                  01448
         BCTR  2,0                 SUBSTRACT 1                          01449
         STH   2,FILES+6           PUT NEW NUMBER BACK                  01450
         CH    2,=H'0000'          SEE IF MORE FILES                    01451
         BH    0(10)               BRANCH IF MORE                       01452
         B     CTEOJ           GO WRITE TAPE MARK FOR EOV               01453
EOFSW    DC    X'0000'             END OF FILE SWITCH                   01454
         SPACE 4                                                        01455
*      THIS ROUTINE WILL ASK THE OPERATOR TO SUPPLY AN ADDRESS          01456
*      FOR THE CARD PUNCH.                                              01457
*                                                                       01458
*      ROUTINE ENTRY= BAL 11,PUNCH                                      01459
         SPACE 3                                                        01460
PUNCH    EQU   *                                                        01461
         CLC   PUNCH1(3),=3X'00'   SEE IF HAVE PUNCH ADDRESS            01462
         BNE   0(11)               BRANCH IF HAVE ADDRESS               01463
         WTOR  'CARD PUNCH - XXX',PUNCH1,3,REPLYECB                     01464
         WAITR ECB=REPLYECB     WAIT FOR OPERATOR                       01465
         XC    REPLYECB(4),REPLYECB      CLEAR REPLY ECB                01466
         OC    PUNCH1(3),=C'   '    MAKE UPPER CASE                     01467
         CLC   PUNCH1(3),=C'EOJ'     SEE IF SHOULD END DEBE             01468
         BE    ASKAGN              GO GET NEW ID                        01469
         BR    11               BACK TO USING ROUTINE                   01470
         SPACE 4                                                        01471
*        ROUTINE TO FIND NUMBER OF FILES WANTED                         01472
*                                                                       01473
*        ENTRY IS  BAL 10,TPFILS                                        01474
*                                                                       01475
TPFILS   EQU   *                                                        01476
         XC    FILES(8),FILES      CLEAR FILES ENTRY AREA               01477
         SPACE 2                                                        01478
*  THE FOLLOWING CODE IS USED FOR SEARCHING OF FILE COUNT WHEN A        01479
*  ONE LINE ENTRY IS USED.                                              01480
         SPACE 1                                                        01481
         LA    2,ID                GET ADRS OF SEARCH                   01482
         LA    3,L'ID-5            GET LENGTH OF SEARCH                 01483
CLCALL   TM    2(2),X'C0'          SEE IF ALPHAMERIC                    01484
         BO    BUMP                BRANCH IS ALPHAMERIC                 01485
         TM    6(2),X'C0'          SEE IF ALPHAMERIC                    01486
         BO    BUMP                BRANCH IF ALPHAMERIC                 01487
         LA    4,3                GET NUMBER OF CHARACTERS              01488
         BAL   11,ALPMRIC         GO SEE IF ALBHAMERIC                  01489
         BNO   BUMP               BRANCH NOT ALPHAMERIC                 01490
         MVC   FILES+5(3),3(2)     MOVE IN NUMBER OF FILES OR ALL       01491
         B     ALLBPS              BRANCH IF FOUND                      01492
BUMP     LA    2,1(2)              BUMP SEARCH ADRS                     01493
         BCT   3,CLCALL            BUMP CTR                             01494
         SPACE 2                                                        01495
TPFL WTOR  'HOW MANY FILES (ALL OR UP TO 999)-XXX',FILES+5,3,REPLYECB   01496
         WAITR ECB=REPLYECB        WAIT FOR OPERATOR                    01497
         XC    REPLYECB(4),REPLYECB      CLEAR REPLY ECB                01498
         OC    FILES+5(3),=3C' '   MAKE ENTRY UPPER CASE                01499
ALLBPS   CLC   FILES+5(3),=C'ALL' SEE IF ALL FILES ARE TO BE PROCESSED  01500
         BE    0(10)         GO BACK TO USING ROUTINE IF ALL            01501
         CLC   FILES+5(3),=C'EOJ'     SEE IF FINISHED WITH ROUTINE      01502
         BE    ASKAGN              GO GET NEXT ROUTINE                  01503
         TM    FILES+5,C'0'    SEE IF NUMBER                            01504
         BNO   OPMSG   TELL OPERATOR OF THE ERROR                       01505
         TM    FILES+6,C'0'   SEE IF NUMBER                             01506
         BNO   OPMSG   TELL OPERATOR OF THE ERROR                       01507
         TM    FILES+7,C'0'   SEE IF NUMBER                             01508
         BNO   OPMSG   TELL OPERATOR OF THE ERROR                       01509
         PACK  FILES(8),FILES(8)                                        01510
         CVB   2,FILES                                                  01511
         ST    2,FILES+4                                                01512
         BR    10                  BACK TO USING ROUTINE                01513
OPMSG    WTO   'HOW MANY FILES ? - UP TO ''999'' OR ''ALL'''            01514
         B     TPFL                GO TRY AGAIN                         01515
         EJECT                                                          01516
*  TEST TO SEE IF PRINTER HAS BEEN OPENED                               01517
         SPACE 1                                                        01518
OPENPRNT EQU   *                                                        01519
         TM    OPENSW,X'FF'                                             01520
         BC    1,OPENOK                                                 01521
         OPEN (PRINT,(OUTPUT))                                          01522
         OI    OPENSW,X'FF'                                             01523
OPENOK   BR    11                                                       01524
OPENSW   DC    X'0000'                                                  01525
         SPACE 3                                                        01526
*  COMMON PRINT ROUTINE                                                 01527
         SPACE 1                                                        01528
TDPRINT  EQU   *                                                        01529
         ST    11,SV11  SAVE REG 11                                     01530
         MVI   OPCODE,9            SPACE 1 AND PRINT                    01531
         PUT   PRINT,OPCODE                                             01532
         LH    1,C    INCREMENT LINE COUNTER                            01533
         LA    0,1(1)                                                   01534
         STH   0,C                                                      01535
         CH    0,CLIMIT  AT END OF PAGE                                 01536
         LA    11,*+8                                                   01537
         BH    SKIPTO1                                                  01538
         L     11,SV11  RESTORE REG 11                                  01539
         BR    11                                                       01540
         SPACE 1                                                        01541
*  SKIP PRINTER TO CHANNEL 1                                            01542
         SPACE 1                                                        01543
SKIPTO1  EQU   *                                                        01544
         MVI   OPCODE,X'8B'        SKIP TO 1                            01545
SKIPTO2  DS    0H                                                       01546
         MVI   TDOUTAR,C' '  BLANK PRINT LINE                           01547
         MVC   TDOUTAR+1(131),TDOUTAR                                   01548
         PUT   PRINT,OPCODE                                             01549
         SR    0,0                                                      01550
         STH   0,C  ZERO LINE COUNTER                                   01551
         BR    11                                                       01552
         SPACE 1                                                        01553
*  SPACE PRINTER ONE LINE                                               01554
         SPACE 1                                                        01555
SPACE1   EQU   *                                                        01556
         ST    11,SV11  SAVE REG 11                                     01557
         MVI   TDOUTAR,C' '  BLANK PRINT LINE                           01558
         MVC   TDOUTAR+1(131),TDOUTAR                                   01559
         MVI   OPCODE,9            SPACE 1 AND PRINT                    01560
         PUT   PRINT,OPCODE                                             01561
         LH    1,C      INCREMENT LINE COUNTER                          01562
         LA    0,1(1)                                                   01563
         STH   0,C                                                      01564
         CH    0,CLIMIT  END OF PAGE                                    01565
         LA    11,*+8  LOAD RETURN ADDRESS IF BRANCHING                 01566
         BH    SKIPTO1  END OF PAGE, BRANCH                             01567
         L     11,SV11  RESTORE REG 11                                  01568
         BR    11                                                       01569
         EJECT                                                          01570
*  ROUTINE TO CONVERT MM INTO A SET MODE COMMAND                        01571
         SPACE 1                                                        01572
CONVRTMM EQU   *                                                        01573
         STM   2,3,SAVEUM    SAVE WORK REGISTERS                        01574
         IC    2,MM+1        GET SECOND BYTE OF MM                      01575
         TM    MM+1,X'F0'    IS IT NUMERIC                              01576
         BC    1,MMMM1       YES, BRANCH                                01577
         AH    2,=H'9'       CONVERT ALPHA TO NUMERIC                   01578
MMMM1    SRDL  2,4           SAVE IT                                    01579
         IC    2,MM          GET FIRST BYTE OF MM                       01580
         TM    MM,X'F0'      IS IT NUMERIC                              01581
         BC    1,MMMM2       YES, BRANCH                                01582
         AH    2,=H'9'       CONVERT ALPHA TO NUMERIC                   01583
MMMM2    SLDL  2,4                                                      01584
         STC   2,MM          PUT MM  BACK IN HEX                        01585
         LM    2,3,SAVEUM    RESTORE REGISTERS                          01586
         BR    14                                                       01587
SAVEUM   DS    2F                                                       01588
         EJECT                                                          01589
*********************************************************************** 01590
*                                                                     * 01591
*  THIS ROUTINE FINDS A UCB ADDRESS WHEN A DEVICE ADDRESS IS PROVIDED * 01592
*  IN THE D1 AREA.  IF A UCB IS FOUND FOR THE DEVICE A CC OF ZERO IS  * 01593
*  RETURNED TO THE USING ROUTINE.                                     * 01594
*                                                                     * 01595
*********************************************************************** 01596
*                                                                       01597
*  LINKAGE IS     BAL 14,UCBLOKUP                                       01598
*                                                                       01599
         SPACE 1                                                        01600
UCBLOKUP EQU   *                                                        01601
         OC    D1(3),=XL3'40'      MAKE UPPER CASE                      01602
         L     2,16                GET CVT ADRS                         01603
         L     3,40(2)             GET ADRS TO UCB ADRS TABLE           01604
UCBSRH1  LH    2,0(3)              GET UCB ADRS                         01605
         LTR   2,2                 SEE IF GOOD ADRS                     01606
         BZ    UCBSRH              BRANCH NO ADDRESS                    01607
         BM    0(14)               BRANCH--- END OF TABLE               01608
         CLI   2(2),X'FF'          SEE IF UCB                           01609
         BNE   UCBSRH              BRANCH NO UCB                        01610
         CLC   D1(3),13(2)         SEE IF UCB FOR UNIT FOUND            01611
         BE    0(14)               FRANCH IF FOUND                      01612
UCBSRH   LA    3,2(3)              BUMP TO GET NEXT UCB ADRS            01613
         B     UCBSRH1             BRANCH NOT END                       01614
         SPACE 3                                                        01615
*  ROUTINE TO ASK FOR THE INPUT TAPE                                    01616
         SPACE 1                                                        01617
TAPINSET EQU   *                                                        01618
         XC    MM(5),MM            CLEAR AREA                           01619
         SPACE 2                                                        01620
* THE FOLLOWING CODE IS USED TO SEARCH AN INPUT TAPE ADDRESS            01621
*  WHEN A ONE LINE ENTRY IS USED.                                       01622
         SPACE 1                                                        01623
         LA    2,ID                GET ADDRS OF SEARCH                  01624
         LA    3,L'ID-7            GET LENGTH OF SEARCH                 01625
TPCPR    TM    2(2),X'C0'          SEE IF ALPHAMERIC                    01626
         BO    BMP                 BRANCH IF ALPHAMERIC                 01627
         TM    8(2),X'C0'          SEE IF ALPHAMERIC                    01628
         BO    BMP                 BRANCH IF ALPHAMERIC                 01629
         LA    4,5                GET NUMBER OF CHARACTERS              01630
         BAL   11,ALPMRIC         GO SEE IF ALBHAMERIC                  01631
         BNO   BMP                BRANCH NOT ALPHAMERIC                 01632
         ST    2,INFNDAD          STORE WHERE FOUND                     01633
         ST    2,CRNTLOC           STORE LOCATION OF TAPE ADRS          01634
         MVC   MM(5),3(2)          MOVE IN TAPE ADRS AND MODE           01635
         BAL   11,BYWAIT           GO TO MODE & USB RTN                 01636
         B     TPINSET             GO SET MODE AND UCB                  01637
BMP      LA    2,1(2)              BUMP SEARCH ADRS                     01638
         BCT   3,TPCPR             SEARCH AGAIN                         01639
         SPACE 2                                                        01640
         WTOR  'INPUT TAPE - MMXXX',MM,5,REPLYECB                       01641
         BAL   11,WAITAPE    WAIT FOR A REPLY AND SET UP MODE           01642
TPINSET  LA    11,TAPINSET         GET RETURN ADDRESS FOR MSG ROUTINE   01643
         BNE   NODEVICE            GO PRINT NO DEVICE MSG               01644
         TM    MM+4,X'BF'          SEE IF INPUT ERROR                   01645
         BZ    INPTEROR            BRANCH IF INPUT ERROR                01646
         MVC   INTRTCH(1),MM       SET UP TAPE'S DCB                    01647
         MVI   INDEVT,X'81'                                             01648
         LA    11,TAPINSET             GET RETURN ADDRESS               01649
         CLI   18(2),X'80'       IS IT A TAPE (2 POINTS TO UCB)         01650
         BNE   NTPMSG              BRANCH IF NOT A TAPE                 01651
         TM    SYSTYP,X'40'        SEE IF PCP                           01652
         BO    NCHECK              BRANCH IF PCP                        01653
         TM    3(2),X'08'          IS IT BEING USED                     01654
         BO    ASNGDMG             BRANCH IF BEING USED                 01655
         TM    3(2),X'80'          SEE IF OFFLINE                       01656
         BO    ONLINE              BRANCH IF ONLINE                     01657
NCHECK   EQU   *                                                        01658
         BAL   11,ENABLE           SEE IF SHOULD PRINT ENABLE MSG       01659
         ST    2,INDEBMOD          STORE UCB ADDRESS IN DEB             01660
         MVC   INDEBMOD(1),MM      PUT SET MODE CMD IN DEB              01661
         OI    INIOB,X'40'         SET ON CHAINING                      01662
         MVC   INCCW(1),MM       PUT SET MODE IN CCW                    01663
         MVC   INCCW+1(7),=X'00000060000001'                            01664
         BR    10                                                       01665
INPTEROR WTO 'FORMAT ERROR - RETYPE LAST ENTRY'                         01666
         B     TAPINSET            GO TRY AGAIN                         01667
NTPMSG   EQU   *                                                        01668
         WTO 'THE ADDRESS ENTERED IS NOT A TAPE DRIVE'                  01669
         B     CLR                 BRANCH TO TAPE ADRS CLEAR ROUTINE    01670
ASNGDMG  EQU   *                                                        01671
         WTO 'THE TAPE ADDRESS JUST ENTERED IS ASSIGNED BY THE SYSTEM'  01672
         B     CLR                 BRANCH TO TAPE ADRS CLEAR ROUTINE    01673
         SPACE 3                                                        01674
ONLINE   EQU   *                                                        01675
     WTO   'THE TAPE SPECIFIED IS ONLINE - SHOULD BE OFFLINE FOR DEBE'  01676
         B     CLR                 BRANCH TO TAPE ADRS CLEAR ROUTINE    01677
         SPACE 3                                                        01678
*        BLANK OUT BAD TAPE ADDRESS FOR RETRY                           01679
         SPACE 1                                                        01680
CLR      L     2,CRNTLOC           GET LOCATION OF TAPE ADDRESS         01681
         LTR   2,2                 SEE IF DEVICE ADRS ENTERED           01682
         BZ    0(11)               BRANCH IF NO ADDRESS                 01683
         XC    CRNTLOC,CRNTLOC     CLEAR LOCATION OF TAPE ADRS          01684
         MVC   3(5,2),=CL5' '      MOVE IN BLANKS                       01685
         BR    11                  BRANCH TO USING ROUTINE              01686
         SPACE 3                                                        01687
*  ROUTINE TO ASK FOR THE OUTPUT TAPE                                   01688
         SPACE 1                                                        01689
TPOUTSET EQU   *                                                        01690
         XC    MM(5),MM            CLEAR AREA                           01691
         SPACE 2                                                        01692
*  THE FOLLOWING CODE IS USED TO SEARCH AN OUTPUT TAPE ADDRESS WHEN     01693
*  A ONE LINE ENTRY IS USED                                             01694
         SPACE 1                                                        01695
         LA    2,ID+L'ID-9         GET ADRS OF SEARCH                   01696
         LA    3,L'ID-6            GET LENGTH OF SEARCH                 01697
TPCPAR   TM    2(2),X'C0'          SEE IF ALPHAMERIC                    01698
         BO    BMPIT               BRANCH IF ALPHAMERIC                 01699
         TM    8(2),X'C0'          SEE IF ALPHAMERIC                    01700
         BO    BMPIT               BRANCH IF ALPHAMERIC                 01701
         LA    4,5                GET NUMBER OF CHARACTERS              01702
         BAL   11,ALPMRIC         GO SEE IF ALBHAMERIC                  01703
         BNO   BMPIT              BRANCH NOT ALPHAMERIC                 01704
         CL    2,INFNDAD          SEE IF SAME ADDRESS                   01705
         BE    NOTTHR             BRANCH IF SAME ADDRESS                01706
         ST    2,CRNTLOC           STORE LOCATION OF TAPE ADRS          01707
         MVC   MM(5),3(2)          MOVE IN TAPE ADRS                    01708
         BAL   11,BYWAIT           GO SET UP MODE & UCB                 01709
         B     TPOTSET             BRANCH AROUND CNT                    01710
BMPIT    BCT   2,*+4               SUB 1                                01711
         BCT   3,TPCPAR SEARCH AGAIN                                    01712
         SPACE 2                                                        01713
NOTTHR   WTOR  'OUTPUT TAPE - MMXXX',MM,5,REPLYECB                      01714
         BAL   11,WAITAPE    WAIT FOR REPLY  AND SET UP MM              01715
TPOTSET  LA    11,TPOUTSET         GET RETURN ADDRESS FOR MSG ROUTINE   01716
         BNE   NODEVICE            GO PRINT NO DEVICE MSG               01717
         TM    MM+4,X'BF'          SEE IF INPUT ERROR                   01718
         BZ    OUTPTERR            BRANCH IF INPUT ERROR                01719
         MVC   OUTTRTCH(1),MM                                           01720
         MVI   OUTDEVT,X'81'                                            01721
         LA    11,TPOUTSET             GET RETURN ADDRESS               01722
         CLI   18(2),X'80'       IS IT A TAPE                           01723
         BNE   NTPMSG              BRANCH IF NOT A TAPE                 01724
         TM    SYSTYP,X'40'        SEE IF PCP                           01725
         BO    NTCHECK             BRANCH IF PCP                        01726
         TM    3(2),X'08'          IS IT BEING USED                     01727
         BO    ASNGDMG             BRANCH IF BEING USED                 01728
         TM    3(2),X'80'          SEE IF OFFLINE                       01729
         BO    ONLINE              BRANCH IF ONLINE                     01730
NTCHECK  EQU   *                                                        01731
         BAL   11,ENABLE           SEE IF SHOULD PRINT ENABLE MSG       01732
         ST    2,OUTDEBMD          STORE UCB ADDRESS IN DEB             01733
         MVC   OUTDEBMD(1),MM                                           01734
         OI    OUTIOB,X'40'      SET ON CHAINING FLAG                   01735
         MVC   OUTCCW(1),MM      BUILD SET MODE COMMAND                 01736
         MVC   OUTCCW+1(7),=X'00000060000001'                           01737
         BR    10                                                       01738
OUTPTERR WTO 'FORMAT ERROR - RETYPE LAST ENTRY'                         01739
         B     TPOUTSET            GO ASK FOR OUTPUT TAPE AGAIN         01740
         SPACE 2                                                        01741
*  COMMON I/O ROUTINE FOR INPUT                                         01742
         SPACE 1                                                        01743
IOIN     EQU   *                                                        01744
         XC    INECB(4),INECB                                           01745
         EXCP  INIOB                                                    01746
         WAIT  ECB=INECB                                                01747
         NI    INDCB+44,X'3F'                                           01748
         BR    11                                                       01749
         SPACE 1                                                        01750
*  COMMON WAIT FOR ALL REPLIES                                          01751
WAITANS  EQU   *                                                        01752
         WAIT  ECB=REPLYECB                                             01753
         XC    REPLYECB,REPLYECB   CLEAR ECB                            01754
         BR    11                                                       01755
         SPACE 2                                                        01756
*  COMMON I/O ROUTINE FOR OUTPUT                                        01757
         SPACE 1                                                        01758
IOOUT    EQU   *                                                        01759
         XC    OUTECB(4),OUTECB                                         01760
         EXCP  OUTIOB                                                   01761
         WAIT  ECB=OUTECB                                               01762
         NI    OUTDCB+44,X'3F'                                          01763
         BR    11                                                       01764
         SPACE 2                                                        01765
*  ROUTINE TO WAIT ON THE REPLY AND CONVERT THE MM INTO A SET MODE      01766
WAITAPE  EQU   *                                                        01767
         WAIT  ECB=REPLYECB                                             01768
         XC    REPLYECB(4),REPLYECB                                     01769
         OC    MM(5),=C'     '     MAKE ALL CAPS                        01770
         CLC   MM(3),=C'EOJ'                                            01771
         BE    ASKAGN                                                   01772
BYWAIT   MVC   TDOUTAR(5),MM  GET MMXXX FOR PRINTING ON LISTING         01773
         MVI   TDOUTAR+5,C' '                                           01774
         MVC   TDOUTAR+6(126),TDOUTAR+5                                 01775
         MVC   TDOUTAR+5(24),=CL24' - MMXXX FOR INPUT TAPE.'            01776
         MVC   TDOUTAR+50(47),=CL47'*** THIS IS NOT A DATA RECORD FROM X01777
               THE TAPE ***'                                            01778
         BAL   14,CONVRTMM                                              01779
         OI    MM,X'03'            SET MODE COMMAND NOW IN MM           01780
         MVC   D1(3),XXX                                                01781
         BAL   14,UCBLOKUP                                              01782
         BR    11                                                       01783
         EJECT                                                          01784
*  THIS SUB-ROUTINE IS USED TO CHECK FOR ALPHAMERIC CHARACTERS          01785
*  IN THE ROUTINE ID AREA.  IF THEY ARE FOUND A CC OF 3                 01786
*  IS RETURNED.      REG 2 = SEARCH AREA   REG 4 = NUMB OF CHARACTERS   01787
         SPACE 1                                                        01788
*                   LINKAGE  IS   BAL 11,ALPMRIC                        01789
ALPMRIC  LR    5,2                 GET ADRS OF SEARCH                   01790
ALPAGN   TM    3(5),X'C0'          SEE IF NOT ALPHA MERIC               01791
         BNO   0(11)           RETURN WITH NOT CC 3 IF NOT ALPHAMERIC   01792
         LA    5,1(5)              BUMP ADRS OF SEARCH                  01793
         BCT   4,ALPAGN            BRANCH NOT FINISHED                  01794
         B     0(11)               RETURN WITH CC OF 3 IF ALPHAMERIC    01795
         SPACE  3                                                       01796
*                                                                       01797
*                                                                       01798
*  THIS SUB-ROUTINE IS USED TO INFORM THE OPERATOR OF THE               01799
*  NON-EXISTANCE OF DEVICE ADDRESS ENTERED VIA THE CONSOLE.             01800
*                                                                       01801
*  LINKAGE-  ROUTINE ENTERED VIA BRANCH, RETURN ADDRESS MUST            01802
*    BE PROVIDED IN REGISTER 11 PRIOR TO BRANCHING TO SUB-ROUTINE.      01803
*                                                                       01804
NODEVICE WTO   'UCB NOT FOUND FOR DEVICE ADDRESS ENTERED'               01805
         B     CLR                 GO CLEAR BAD ADRS                    01806
         SPACE 2                                                        01807
*  THIS SUB-ROUTINE IS USED TO SEARCH THE ROUTINE ID FIELD FOR THE      01808
*  NUMBER OF FILES WHICH MUST BE FORWARD OR BACK SPACED.                01809
*  A CONDITION CODE OF 3 IS PASSED BACK TO THE USING ROUTINE IF A FILE  01810
*  COUNT IS FOUND. LINKAGE = BAL 10,NBFILS                              01811
         SPACE 2                                                        01812
NBFILS   XC    FILES(8),FILES      CLEAR FILES ENTRY AREA               01813
         LA    2,ID                GET ADDRESS OF SEARCH                01814
         LA    3,L'ID-5            GET LENGTH OF SEARCH                 01815
FLCNTS   TM    2(2),X'C0'          SEE IF ALPHAMERIC                    01816
         BO    BUMPFC              BRANCH IF ALPHAMERIC                 01817
         TM    6(2),X'C0'          SEE IF ALPHAMERIC                    01818
         BO    BUMPFC              BRANCH IF ALPHAMERIC                 01819
         LA    4,3                 GET NUMBER OF CHARACTERS             01820
         BAL   11,ALPMRIC          GO SEE IF ALPHAMERIC                 01821
         BNO   BUMPFC              BRANCH IF NOT ALPHAMERIC             01822
         MVC   FILES+5(3),3(2)     MOVE FILE CNT TO CNT AREA            01823
         BR    10                  RETURN TO USING ROUTINE WITH CC=3    01824
BUMPFC   LA    2,1(2)              BUMP SEARCH ADDRESS                  01825
         BCT   3,FLCNTS            LOOK AGAIN                           01826
         BR    10                RETURN TO USING ROUTINE WITH NOT CC=3  01827
         SPACE 2                                                        01828
         SPACE 5                                                        01829
APPEND   BR    14                                                       01830
         EJECT                                                          01831
*  SEE THE OS SYSTEM CONTROL BLOCKS MANUAL FOR THE FORMATS OF THE       01832
*  FOLLOWING DCB'S, DEB'S, ECB'S, AND IOB'S.                            01833
         SPACE 1                                                        01834
*  DEB FOR INPUT DATA SET                                               01835
         SPACE 1                                                        01836
         CNOP  0,4                      ALIGN                           01837
INIOVEC  EQU   *                                                        01838
         DC    A(APPEND)                                                01839
         DC    A(APPEND)                                                01840
         DC    A(APPEND)                                                01841
         DC    A(APPEND)                                                01842
         DC    A(APPEND)                                                01843
         DC    3F'0'                                                    01844
         DC    X'06000000'                                              01845
INDEB    DS    0F                                                       01846
         DC    F'0'                                                     01847
         DC    X'04'                                                    01848
         DC    X'000000'                                                01849
         DC    X'C0000000'                                              01850
         DC    X'30000000'                                              01851
         DC    2F'0'                                                    01852
         DC    X'0F'                                                    01853
         DC    AL3(INDCB)                                               01854
INEXSC   DC    X'02'                                                    01855
         DC    AL3(INIOVEC)                                             01856
INDEBMOD DC    X'00'                                                    01857
INDEBUCB DC    X'000000'                                                01858
INRESV   DC    X'0000'             RESERVED                             01859
INCYSEX  DC    X'0000'             CYL ADRS OS START OF EXTENT          01860
INTKSEX  DC    X'0000'             TRK ADRS OF START OF EXTENT          01861
INCYDEX  DC    X'0000'             CYL ADRS OF END OF EXTENT            01862
INTRKDX  DC    X'0000'             TRK ADRS OF END OF EXTENT            01863
INTKEXT  DC    X'0000'             NUMB OF TRKS TO EXTENT               01864
         SPACE 1                       9                                01865
*  DCB FOR INPUT DATA SET                                               01866
INDCB    DS    0F                                                       01867
         DC    4F'0'                                                    01868
INTRTCH  EQU   *                                                        01869
INMODSTK EQU   *                                                        01870
         DC    X'00'                                                    01871
INDEVT   DC    X'00'                                                    01872
INDENS   DC    X'00'                                                    01873
         DC    X'00'                                                    01874
         DC    5F'0'                                                    01875
         DC    H'0'                                                     01876
         DC    BL2'1101000000001000'                                    01877
INDBAD   DC    A(INDEB)                                                 01878
         DC    X'10000000'                                              01879
         DC    5F'0'                                                    01880
         SPACE 1                                                        01881
*  DEB FOR OUTPUT DATA SET                                              01882
         SPACE 1                                                        01883
OUTIOVEC EQU   *                                                        01884
         DC    A(APPEND)                                                01885
         DC    A(APPEND)                                                01886
         DC    A(APPEND)                                                01887
         DC    A(APPEND)                                                01888
         DC    A(APPEND)                                                01889
         DC    3F'0'                                                    01890
         DC    X'06000000'                                              01891
OUTDEB   DS    0F                                                       01892
         DC    F'0'                                                     01893
         DC    X'17000000'                                              01894
         DC    X'C0000000'                                              01895
         DC    X'30000000'                                              01896
         DC    2F'0'                                                    01897
         DC    X'0F'                                                    01898
         DC    AL3(OUTDCB)                                              01899
OUTEXS   DC    X'02'                                                    01900
         DC    AL3(OUTIOVEC)                                            01901
OUTDEBMD DC    X'00'                                                    01902
OUTDBUCB DC    X'000000'                                                01903
OUTRESV  DC    X'0000'             RESERVED                             01904
OUTCYSEX DC    X'0000'             CYL ADRS OF START OF EXTENT          01905
OUTTKSEX DC    X'0000'             TRK ADRS OF START OF EXTENT          01906
OUTCYDEX DC    X'0000'             CYL ADRS OF END OF EXTENT            01907
OUTTRKDX DC    X'0000'             TRK ADRS OF END OF EXTENT            01908
OUTTKEXT DC    X'0001'             NUMB OF TRKS TO EXTENT               01909
         SPACE 2                                                        01910
*  DCB FOR OUTPUT DEVICE                                                01911
         SPACE                                                          01912
         DS    0F                                                       01913
OUTDCB   DC    F'0'                                                     01914
         DC    F'0'                                                     01915
         DC    F'0'                                                     01916
         DC    F'0'                                                     01917
OUTTRTCH EQU   *                                                        01918
OUTMDSTK EQU   *                                                        01919
         DC    X'00'                                                    01920
OUTDEVT  DC    X'00'                                                    01921
OUTDENS  DC    X'00'                                                    01922
         DC    X'00'                                                    01923
OUTBUFNO DC    X'00'                                                    01924
OUTBUFCB DC    X'000000'                                                01925
OUTBUFL  DC    X'0000'                                                  01926
OUTDSORG DC    X'4000'                                                  01927
OUTIOBAD DC    A(OUTIOB)                                                01928
         DC    X'00'                                                    01929
OUTEODAD DC    X'000000'                                                01930
OUTRECFM DC    X'00'                                                    01931
OUTEXLST DC    X'000000'                                                01932
OUTTIOT  DC    X'0000'                                                  01933
OUTMACRE DC    X'0000'                                                  01934
OUTFLGS  DC    X'00'                                                    01935
OUTDEBAD DC    AL3(OUTDEB)                                              01936
OUTFLOGS DC    X'00'                                                    01937
         DC    X'000000'                                                01938
OUTOPTCD DC    X'00'                                                    01939
         DC    X'000000'                                                01940
         DC    F'0'                                                     01941
         DC    F'0'                                                     01942
         DC    F'0'                                                     01943
         DC    F'0'                                                     01944
         SPACE 1                                                        01945
         SPACE 1                                                        01946
*  ECB FOR INPUT DATA SET                                               01947
         SPACE 1                                                        01948
INECB    DC    F'0'                                                     01949
         SPACE 1                                                        01950
*  IOB FOR INPUT DATA SET                                               01951
         SPACE 1                                                        01952
INIOB    DS    0F                                                       01953
         DC    X'4200'                                                  01954
INSENS   DC    H'0'                                                     01955
         DC    X'7F'                                                    01956
         DC    AL3(INECB)                                               01957
INSTAT   DC    2F'0'                                                    01958
         DC    A(INCCW)                                                 01959
         DC    A(INDCB)                                                 01960
         DC    F'0'                                                     01961
         DC    H'1'                                                     01962
         DC    H'0'                                                     01963
INDASD   DC    X'00'                                                    01964
INSEEK   DC    XL7'00'                                                  01965
         SPACE 1                                                        01966
*  ECB FOR OUTPUT DATA SET                                              01967
         SPACE 1                                                        01968
OUTECB   DC    F'0'                                                     01969
         SPACE 1                                                        01970
*  IOB FOR OUTPUT DATA SET                                              01971
         SPACE 1                                                        01972
OUTIOB   DS    0F                                                       01973
         DC    X'4200'                                                  01974
OUTSENS  DC    H'0'                                                     01975
         DC    X'7F'                                                    01976
         DC    AL3(OUTECB)                                              01977
OUTSTAT  DC    2F'0'                                                    01978
         DC    A(OUTCCW)                                                01979
         DC    A(OUTDCB)                                                01980
         DC    XL4'00'                                                  01981
         DC    H'1'                                                     01982
         DC    H'0'                                                     01983
OUTDASD  DC    X'00'                                                    01984
OUTSEEK  DC    X'00000000000003'        BBCCHHR                         01985
*        IOB FOR PRINTER                                                01986
         SPACE                                                          01987
         DS    0F                                                       01988
PRTIOB   EQU   *                                                        01989
         DC    X'0200'                                                  01990
PRTSNS   DC    H'0'                                                     01991
ECBCD    DC    X'7F'                                                    01992
         DC    AL3(PRTECB)                                              01993
PRTSTAT  DC    2F'0'                                                    01994
         DC    A(PRTCCW)                                                01995
         DC    A(PRINTAPG)                                              01996
RPSM     DC    F'0'                                                     01997
BLC1     DC    F'0'                                                     01998
PMBBC    DC    F'0'                                                     01999
CHHR     DC    F'0'                                                     02000
         SPACE                                                          02001
*        ECB FOR PRINTER                                                02002
         SPACE                                                          02003
PRTECB   DC    F'0'                                                     02004
         SPACE                                                          02005
         SPACE 1                                                        02006
*  CONSTANTS AND CCW'S      * * * * * * * * * * * * * * * * * * * * *   02007
         SPACE 3                                                        02008
READER1  DC    3X'00'              ADDRESS AREA FOR CARD READER         02009
PUNCH1   DC    3X'00'              ADDRESS AREA FOR CARD PUNCH          02010
         SPACE 3                                                        02011
TAPE     DC    C'  '               MODE FOR TAPE ADRS                   02012
DISK     DC    C'    '             DISK AND TAPE ADRS                   02013
         SPACE 3                                                        02014
*  CCW'S FOR OUTPUT DATA SET                                            02015
         SPACE 1                                                        02016
OUTCCW   DS    5D                                                       02017
*  CCW'S FOR INPUT DATA SET                                             02018
         SPACE 1                                                        02019
INCCW    DS    5D                                                       02020
         SPACE 3                                                        02021
FILES    DC    D'0'                STORAGE + WORK AREA                  02022
SFCCW    CCW   X'3F',SFCCW,X'20',1                                      02023
BFCCW    CCW   X'2F',SFCCW,X'20',1                                      02024
SRCCW    CCW   X'37',BSCCW,X'20',1                                      02025
BSCCW    CCW   X'27',BSCCW,X'20',1                                      02026
WRLAB    CCW   1,TDAREA,X'20',80   WRITE TAPE LABEL CCW                 02027
CTCCW    CCW   X'41',TDAREA,X'20',80                                    02028
RDLBL    CCW   2,TDAREA,X'00',80   READ LABEL CCW                       02029
RWCCW    CCW   7,RWCCW,X'20',1                                          02030
TDINCCW  CCW   2,TDAREA,X'20',32767                                     02031
TTCCWOUT CCW   1,TDAREA,X'20',32767                                     02032
WTCCW    CCW   31,TDAREA,X'20',1                                        02033
RWUN     CCW   X'0F',RWUN,X'20',1                                       02034
NOOP     CCW   X'03',*,X'20',1           NOOP CCW                       02035
RDLABL   CCW   X'07',OUTSEEK,X'40',6      SEEK                          02036
SHIDE    CCW   X'31',OUTSEEK+2,X'40',5  SID=                            02037
TIC      CCW   X'08',OUTCCW+SHIDE-RDLABL,X'40',1  TIC                   02038
CLPCCW   CCW   X'06',TDAREA,X'00',80   READ OR WRITE DATA               02039
PRTCCW   CCW   X'03',TDOUTAR,X'00',132   PRINT DATA                     02040
         SPACE 3                                                        02041
PRINT DCB DDNAME=SYSPRINT,MACRF=PM,DSORG=PS,RECFM=FM,LRECL=133,        X02042
               BLKSIZE=133                                              02043
         SPACE 3                                                        02044
PRINTAPG DCB   DDNAME=SYSPRINT,MACRF=E,DSORG=PS,RECFM=FM,              X02045
               IOBAD=PRTIOB                                             02046
         SPACE 3                                                        02047
TDWK     DS    D                                                        02048
SAVEAREA DC    18F'0'                                                   02049
TDPTABLE DC    C'0123456789ABCDEF'                                      02050
         DS    0F                                                       02051
MESSAGE  DC    AL2(THERE-*)     MESSAGE LENGTH                          02052
         DC    AL2(0)                                                   02053
COUNT    DC    C'NUMBER '                                               02054
         DC    C'RECORDS PROCESSED'                                     02055
THERE    EQU   *                                                        02056
D1       DC    C'0'                                                     02057
D2       DC    C'0'                                                     02058
D3       DC    C'0'                                                     02059
ID       DC    CL40'00'                                                 02060
MM       DC    C'00'                                                    02061
XXX      DC    C'000'                                                   02062
OF       DC    F'15'                                                    02063
EOJECB   DC    F'0'                    EOJ ECB                          02064
REPLYECB DC    F'0'                                                     02065
INFNDAD  DC    F'0'               STORE WHERE INPUT TAPE ADRS FOUND     02066
CRNTLOC  DC    F'0'                STORAGE AREA FOR LST TAPE ADRS FND   02067
         SPACE 3                                                        02068
GETMAIN1 DC    F'0'                ADDADDRESS FROM GETMAIN FOR DEB      02069
PGMDEB1  DC    F'0'                ADDRESS OF DEB IN PGM                02070
OLDEB1   DC    F'0'                ADDRESS OF DEB IN PGM FOR NEW DEB    02071
         SPACE 2                                                        02072
GETMAIN2 DC    F'0'                ADDRESS FROM GETMAIN FOR DEB         02073
PGMDEB2  DC    F'0'                ADDRESS OF DEB IN PGM                02074
OLDEB2   DC    F'0'                ADDRESS OF DEB IN PGM                02075
BLANK    DC    F'0'                WORD OF ZEROS                        02076
OPCODE   DC    X'00'                                                    02077
TDOUTAR  DS    CL132                                                    02078
RECCNT   DC    X'00000F'                                                02079
COND1    DC    X'1F'                                                    02080
RECHDG   DC    C'REC '                                                  02081
         DC    X'2020202020'                                            02082
         DC    C', LENGTH '                                             02083
         DC    X'2020202020'                                            02084
SV11     DS    F                                                        02085
C        DC    H'0'                                                     02086
CLIMIT   DC    H'58'                                                    02087
SYSTYP   DC    X'00'               SYSTEM TYPE STORAGE AREA             02088
*                                  X'10' = MVT                          02089
*                                  X'20' = MFT                          02090
*                                  X'40' = PCP                          02091
*                                                                       02092
         SPACE 3                                                        02093
         LTORG                                                          02094
         SPACE 3                                                        02095
TDAREA2  DS    CL101                                                    02096
TDAREA   DS    132CL250                                                 02097
         END   OSDEBE                                                   02098
