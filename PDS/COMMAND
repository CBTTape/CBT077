//SYZYGYBA JOB (PS01),'SYZYGYB',
//            CLASS=A,MSGCLASS=A,
//            NOTIFY=SYZYGY,REGION=2048K
//*-----------------------------------------------*
//*   LIB: SYZYGYB.PDS.DATA(COMMAND)
//*   DOC: ASSEMBLE AND LINK
//*-----------------------------------------------*
//ASSEMB  EXEC ASSEMBLE,PARM.LINK='LIST,LET,AC=1'
//ASM.SYSLIB  DD
//          DD
//          DD
//          DD  DSN=SYZYGY.PDS.DATA,DISP=SHR
//SYSIN    DD  *
COMMAND  TITLE 'C O M M A N D  --  ISSUE SYSTEM OPERATOR COMMANDS V2.0'
***********************************************************************
*                                                                     *
*                           C O M M A N D                             *
*                                                                     *
*                   ISSUE SYSTEM OPERATOR COMMANDS                    *
*                                                                     *
*                                                                     *
*     THIS PROGRAM ACCEPTS SYSTEM OR JES OPERATOR COMMANDS AS         *
*     INPUT AND EXECUTES THEM USING SVC 34. IT MUST BE APF            *
*     AUTHORIZED.                                                     *
*                                                                     *
*     COMMAND CAN OPERATE IN ONE OF THREE MODES:                      *
*                                                                     *
*     1) BATCH OR CALLED PROGRAM                                      *
*        IN THIS MODE COMMAND ACCEPTS INPUT AS EITHER 80-BYTE         *
*        CARD IMAGES FROM SYSIN OR A SINGLE COMMAND FROM THE PARM     *
*        FIELD. THE RESPONSE TO THE OPERATOR COMMAND WILL             *
*        APPEAR ON ALL OPERATOR CONSOLES. FOR EXAMPLE:                *
*                                                                     *
*           //STEP1    EXEC PGM=COMMAND,PARM='VARY 017,ONLINE'        *
*                                                                     *
*           - OR -                                                    *
*                                                                     *
*           //STEP1    EXEC PGM=COMMAND                               *
*           //SYSIN    DD *                                           *
*           VARY 017,ONLINE                                           *
*           /*                                                        *
*                                                                     *
*     2) TSO COMMAND PROCESSOR                                        *
*        IN THIS MODE COMMAND EXPECTS TO FIND THE OPERATOR COMMAND    *
*        DIRECTLY FOLLOWING ON THE TSO INPUT LINE. THE RESPONSE TO    *
*        OS COMMANDS WILL THEN BE DISPLAYED ON THE TSO TERMINAL.      *
*        RESPONSE TO JES COMMANDS WILL APPEAR ON ALL CONSOLES.        *
*        FOR EXAMPLE:                                                 *
*                                                                     *
*           COMMAND D T         <--- (RESPONSE WILL APPEAR ON CRT)    *
*                                                                     *
*     3) CALLABLE SUBROUTINE                                          *
*        IN THIS MODE COMMAND ACCEPTS INPUT ACCORDING TO STANDARD     *
*        OS LINKAGE CONVENTIONS. IN ADDITION TO THE COMMAND ITSELF,   *
*        A SECOND PARAMETER MAY BE PASSED WHICH CONTAINS THE          *
*        CONSOLE NUMBER WHERE YOU WISH THE RESPONSE TO APPEAR.        *
*        (THE SVC 34 WILL ALSO ASSUME THE AUTHORITY OF THAT           *
*        CONSOLE.) FOR EXAMPLE:                                       *
*                                                                     *
*           LA       R1,CMDADDR                                       *
*           LA       R15,=V(COMMAND)                                  *
*           BALR     R14,R15                                          *
*                                                                     *
*           CMDADDR  DC    A(OPERCMD)                                 *
*           CNSADDR  DC    XL1'80',AL3(CONSOLE)                       *
*           OPERCMD  DC    H(3),CL3'D T'                              *
*           CONSOLE  DC    F'5'                                       *
*                                                                     *
*        This would make it appear as if 'D T' were issued from       *
*        console 5. (This method is used by program 'SPY')            *
*                                                                     *
*     Just prior to issuing a command via SVC 34, COMMAND will        *
*     issue a WTO of the form                                         *
*                                                                     *
*        BIICMD01 - USERID  - VARY 017,ONLINE                         *
*                                                                     *
*     This will appear on the operator's console and in SYSLOG.       *
*                                                                     *
*     COMMAND may be used to issue replies to WTORs. Since the        *
*     reply may be sensitive (for example, a password) COMMAND        *
*     will supress it whenever a REPLY is issued.                     *
*                                                                     *
***********************************************************************
         EJECT
COMMAND  CSECT
         SPACE 3
R0       EQU   0                  register 0
R1       EQU   1                  register 1
R2       EQU   2                  work register
R3       EQU   3                  work register
R4       EQU   4                  work register
R10      EQU   10                 parameter list address register
R11      EQU   11                 subroutine linkage register
R12      EQU   12                 base register
R13      EQU   13                 save area address register
R14      EQU   14                 register 14
R15      EQU   15                 register 15
         EJECT
         SAVE  (14,12)            save caller's registers
         LR    R12,R15            establish
         USING COMMAND,R12        addressability
         LA    R3,SAVEAREA        get our savearea address
         ST    R13,SAVEAREA+4     establish back
         ST    R3,8(R13)          and forward savearea pointers
         LR    R13,R3             ESTABLISH OUR SAVEAREA ADDRESS
         LR    R10,R1             SAVE PARAMETER REGISTER
         SPACE 2
         L     R2,CVTPTR          R2 = ADDR OF CVT
         USING CVT,R2
         L     R3,CVTTCBP         R3 = ADDR OF ADDR OF OUR TCB
         L     R4,8(R3)           R4 = ADDR OF OUR TCB
         USING ASCB,R4
         MVC   ASID,ASCBASID      SAVE OUR ASID
         DROP  R4
         L     R3,0(R3)           R3 = ADDR OF OUR TCB
         USING TCB,R3
         L     R3,TCBTIO          R3 = ADDR OF TIOT
         DROP  R3
         USING TIOT1,R3
         MVC   JOBNAME(8),TIOCNJOB SAVE OUR JOBNAME
         SPACE 3
INITDONE DS    0H                 CHECK OUT INPUT PARM
         TM    0(R10),X'80'       IS FIRST THE ONLY PARM?
         BO    ONEPARM            YES; ONLY PARM
         TM    4(R10),X'80'       IS SECOND THE LAST PARM?
         BO    TWOPARMS           YES; TWO PARMS (CALLED WITH CNXX)
***********************************************************************
*                                                                     *
*     A X'80' WAS NOT FOUND IN THE HIGH ORDER BYTE OF THE FIRST       *
*     TWO PARMS, SO WE CAN ASSUME COMMAND IS BEING CALLED AS A CP.    *
*     IF THE COMMAND BEING ISSUED IS NOT A JES COMMAND THEN           *
*     PLACE OUR ASID INTO THE R0 MASK AND CONTINUE. IF IT IS A        *
*     JES COMMAND, SIMPLY ISSUE THE COMMAND (MODE 1).                 *
*                                                                     *
***********************************************************************
         XR    R2,R2              CLEAR R2
         LH    R2,ASID            R2 = ASID OF CALLER
         O     R2,=XL4'00008000'  TELL SVC34 ITS AN ASID
         ST    R2,R0MASK          AND OVERRIDE THE R0 MASK
         L     R3,0(R10)          R3 = ADDR OF INPUT LINE
         LA    R4,4(R3)           R4 = ADDR OF FIRST CHAR OF INPUT
         AH    R4,2(R3)           R4 = ADDR OF FIRST CHAR PAST COMMAND
         LH    R2,0(R3)           R2 = TOTAL LENGTH OF STRING
         SH    R2,2(R3)           R2 = LENGTH OF OPER CMD PORTION
         BCTR  R2,0               R2 = R2 - 1 FOR EX MVC
         EX    R2,MOVE1           MOVE CMD INTO CARD
         CLI   CARD,C'$'          IS THIS A JES2 CMD?
         BNE   DOSVC34            NO;  GO DO IT
         XC    R0MASK(4),R0MASK   YES; DON'T TRY TO GET BACK REPLY
         B     DOSVC34
***********************************************************************
*                                                                     *
*     X'80' WAS FOUND IN THE HIGH ORDER BYTE OF THE SECOND PARM,      *
*     SO WE HAVE BEEN CALLED AS A SUBROUTINE (MODE 3). THE SECOND     *
*     PARM CONTAINS THE CONSOLE ID WHERE THE COMMAND IS TO 'COME      *
*     FROM', SO USE THAT FOR THE R0 MASK.                             *
*                                                                     *
***********************************************************************
TWOPARMS L     R3,4(R10)          R3 = ADDR OF R0 MASK FOR SVC34
         MVC   R0MASK(4),0(R3)    SAVE R0 MASK FOR SVC34
***********************************************************************
*                                                                     *
*     ONLY ONE PARM WAS PASSED, SO WE ARE BEING CALLED IN MODE 1.     *
*     JUST ISSUE THE COMMAND FROM THE PARM STRING.                    *
*                                                                     *
***********************************************************************
ONEPARM  L     R10,0(R10)         GET PARAMETER ADDRESS
         LH    R3,0(R10)          GET PARAMETER TEXT LENGTH
         LTR   R3,R3              IS PARAMETER TEXT PRESENT?
         BZ    USESYSIN           NO - GO GET COMMANDS FROM SYSIN
         BCTR  R3,R0              DECREMENT R3 FOR USE IN EXECUTE
         EX    R3,MOVE            EXECUTE MVC
DOSVC34  LA    R11,EOJ            GET ADDRESS FOR RETURN FROM SVC34
         B     SVC34              GO ISSUE COMMAND
         SPACE 3
***********************************************************************
*                                                                     *
*     NO PARM FIELD FOUND, SO LOOK AT SYSIN FOR INPUT                 *
*                                                                     *
***********************************************************************
USESYSIN OPEN  (SYSIN,INPUT)      OPEN SYSIN
GETSYSIN GET   SYSIN,CARD         GET A SYSIN RECORD INTO SVC34 LIST
         MVC   CARD+72(8),CARD+80 BLANK OUT SEQUENCE FIELD IN 73-80
         CLI   CARD,C'*'          IS THIS A COMMENT?
         BE    GETSYSIN           YES;GO GET ANOTHER CARD
         LA    R11,GETSYSIN       GET ADDRESS FOR RETURN FROM SVC34
         B     SVC34              GO ISSUE COMMAND
         SPACE 3
EODSYSIN CLOSE (SYSIN)            CLOSE SYSIN
         SPACE 3
EOJ      L     R13,SAVEAREA+4     GET ADDRESS OF CALLER'S SAVEAREA
         RETURN (14,12),RC=0      RETURN TO CALLER
         EJECT
***********************************************************************
*                                                                     *
*     THIS ROUTINE ACTUALLY ISSUES THE SVC 34. IT EITHER RETURNS      *
*     TO THE SYSIN-READ LOOP OR EOJ DEPENDING ON THE VALUE OF R11     *
*                                                                     *
***********************************************************************
SVC34    MVC   WTOTEXT(100),CARD  MOVE COMMAND TEXT INTO WTO LIST
         CLI   WTOTEXT,C'R'       IS THIS A LOWER CASE REPLY?
         BE    REPLY              NO; GO ON
         CLI   WTOTEXT,C'R'       IS THIS AN UPPER CASE REPLY?
         BE    REPLY              NO; GO ON
         CLI   WTOTEXT,X'F0'      START WITH A NUMBER?
         BL    NOTREPLY           NO; CAN'T BE A REPLY
REPLY    MVC   WTOTEXT(100),=CL100'REPLY SUPPRESSED BY ''COMMAND'''
NOTREPLY LA    R3,WTOTEXT+L'WTOTEXT-1 POINT TO END OF TEXT
         LA    R4,WTOTEXT         POINT TO BEGINNING OF TEXT
         SPACE
FINDTEXT DS    0H                 FIND LAST TEXT CHARACTER
         CR    R3,R4              ALL BLANK?
         BL    SVC34END           YES - IGNORE IT
         CLI   0(R3),C' '         BLANK CHARACTER?
         BNE   GOTTEXT            NO - FOUND END OF TEXT
         BCT   R3,FINDTEXT        KEEP ON LOOKING
         SPACE
GOTTEXT  DS    0H                 BUILD PARAMETER LIST LENGTHS
         MVC   WTOUSER(8),JOBNAME SAVE JOB NAME IN MESSAGE
         SR    R3,R4              COMPUTE LENGTH OF
         LA    R3,5(R3)           TEXT AND LIST PREFIX
         STH   R3,CMDLIST         SET SVC 34 LIST LENGTH
         LA    R3,L'WTOID(R3)     ADD WTO ID LENGTH
         LA    R3,L'WTOUSER(R3)   ADD WTO ID LENGTH
         STH   R3,WTOLEN          SET WTO LIST LENGTH
         LA    R0,0
         LA    R1,1
         SVC   244
         MODESET KEY=ZERO         INDICATE KEY=ZERO
         WTO   MF=(E,WTOLIST)     ECHO COMMAND TO OPERATOR VIA WTO
         CLI   WTOTEXT,C'S'       IS THIS A LOWER CASE REPLY?
         BE    STRT               NO; GO ON
         CLI   WTOTEXT,C'S'       IS THIS A LOWER CASE REPLY?
         BE    STRT               NO; GO ON
         CLI WTOTEXT,C'R'
         B     STRT               NO; GO ON
         CLI   WTOTEXT,C'S'       IS THIS AN UPPER CASE REPLY?
         BE    STRT               NO; GO ON
         L     R0,R0MASK          LOAD R0 FOR SVC34 (PROBABLY ZERO)
         B     DOIT1
STRT     LA    R0,1               LOAD REG0 WITH CONSOLE ID 1
DOIT1    LA    R1,CMDLIST         GET ADDRESS OF SVC 34 LIST
         SVC   34                 ISSUE SVC 34 TO PROCESS COMMAND
         MODESET KEY=NZERO        GO BACK TO USER KEY
         SR    R0,R0
         SR    R1,R1
         SVC   244
         SPACE
SVC34END DS    0H                 END OF COMMAND ROUTINE
         BR    R11                RETURN TO MAINLINE
         EJECT
SAVEAREA DC    18F'0'             OUR SAVEAREA
R0MASK   DC    A(0)               R0 MASK FOR SVC34
JOBNAME  DC    CL8' '             OUR JOBNAME
ASID     DC    H'00'              OUR ASID
         SPACE
WTOLIST  DS    0F                 WTO LIST
WTOLEN   DC    AL2(*-*,0)         TEXT LENGTH & MCS FLAGS
WTOID    DC    C'BIICMD01 - '     TEXT IDENTIFIER
WTOUSER  DC    C'XXXXXXXX - '     CALLER'S JOBNAME
WTOTEXT  DC    CL100' '           TEXT PASSED TO COMMAND PROCESSOR
         SPACE
         CNOP  4,8                ALIGN TO MIDDLE OF DOUBLE WORD
CMDLIST  DC    AL2(*-*,0)         SVC 34 LIST
CARD     DC    CL101' '           COMMAND TEXT
         SPACE 3
MOVE     MVC   CARD(*-*),2(R10)   MOVE PARM TEXT INTO SVC 34 LIST
MOVE1    MVC   CARD(*-*),0(R4)    MOVE PARM TEXT INTO SVC 34 LIST
         SPACE 3
SYSIN    DCB   DDNAME=SYSIN,DSORG=PS,LRECL=80,MACRF=(GM),RECFM=FB,     *
               EODAD=EODSYSIN
         SPACE 3
         LTORG                    BEGIN LITERAL POOL
         EJECT
***********************************************************************
*                                                                     *
*                SYSTEM CONTROL BLOCK MAPPING DSECTS                  *
*                                                                     *
*      ALL THESE MACROS CAN BE FOUND IN THE 'SYS1.AMODGEN' MACLIB     *
*                                                                     *
***********************************************************************
         PRINT NOGEN
         CVT   DSECT=YES,LIST=YES COMMUNICATIONS VECTOR TABLE
         SPACE 2
         DSECT
         IEFTIOT1                 TASK I/O TABLE
         SPACE 2
         IHAASCB                  ADDRESS SPACE CONTROL BLOCK
         SPACE 2
         IKJTCB                   TASK CONTROL BLOCK
         SPACE 2
         END
//LINK.SYSLMOD DD  DSN=SYZYGY.LINKLIB(CMD),DISP=SHR
