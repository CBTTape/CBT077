         TITLE '   C A N C E L O K   '
***********************************************************************
*                                                                     *
*        'CANCELOK' PROGRAM                                           *
*                                                                     *
***********************************************************************
         SPACE
*        ATTRIBUTES. RE-ENTRANT, AUTHORIZED.
*        DESCRIPTION.
*         THIS PROGRAM SETS THE CANCELABLE ATTRIBUTE ON FOR A
*         SPECIFIED JOB OR ASID.
*         EACH NON-CANCELABLE JOB IN THE SYSTEM IS DISPLAYED
*         ON THE OPERATOR'S CONSOLE, AND THE OPERATOR IS ASKED
*         TO REPLY 'U' TO CONTINUE.  IF THE REPLY IS 'S'
*         THE JOB WILL BE MARKED CANCELABLE.
*
*         THIS PROGRAM DOES NOT CANCEL THE JOB.  IT JUST MARKS
*         THE JOB CANCELABLE, SO THE OPERATOR CAN CANCEL IT
*         WITH A CANCEL COMMAND.
*
*        LOG OF CHANGES.
*         NONE.
*
         SPACE
CANCELOK START
         USING *,R10
         B     @PROLOG-*(,R15)
         DC    AL1(11),CL11'CANCELOK'
         DC    CL16' &SYSDATE &SYSTIME '
@SIZE    DC    0F'0',AL1(1),AL3(@DATAL)
@PROLOG  STM   14,12,12(13)
         LR    R10,R15             BASE
         LR    R2,R1
         L     R0,@SIZE
         GETMAIN R,LV=(0)
         LR    R9,R1
         USING @DATA,R9
         ST    13,4(,1)            CHAIN SAVEAREA
         ST    1,8(,13)            CHAIN SAVEAREA
         LR    13,1                NEW SAVEAREA
         SPACE 1
         XC    LINKAREA(8),LINKAREA
         SLR   R15,R15
         STH   R15,RC              SET RC = 0
         MVI   OPTIONS,0
         MVI  LINE-1,C' '
         SPACE
         L     R1,0(,R2)           POINT TO PARM
         LH    R15,0(,R1)          LENGTH OF PARM
         LTR   R15,R15
         BZ    PARMX
PARMX    EQU   *
         SPACE
************************************************************
*                                                          *
*        POINT TO FIRST ASCB                               *
*                                                          *
************************************************************
         SPACE
         L     R4,16               CVTPTR
         L     R4,556(,R4)         CVTASVT
         L     R5,516(,R4)         ASVTMAXU
         LA    R6,528(,R4)         ASVTENTY
         LR    R11,R6              SAVE FOR DEBUGGING
         LA    R4,1                ASID 1
         SPACE
************************************************************
*                                                          *
*        PROCESS EACH ASCB                                 *
*                                                          *
************************************************************
         SPACE
LOOP     TM    0(R6),X'80'         IS ASCB IN USE
         BO    NEXTASCB            NO, BRANCH
         L     R7,0(,R6)           GET ASCB ADDRESS
         CLC   0(4,R7),=C'ASCB'    VERIFY ASCB
         BNE   ERROR
         CH    R4,36(,R7)          DOES ASID MATCH ASCBASID
         BNE   ERROR
         L     R8,56(,R7)          GET ADDRESS OF CSCB
         TM    7(R8),X'08'         IS IT NON CANCELABLE?
         BO    NEXTASCB            NO, IGNORE IT
*         ASID XXXX JOB XXXXXXXX REPLY U TO CONTINUE
         MVC   LINE,LINE-1
         MVC   LINE+00(4),=C'ASID'
         UNPK  DOUBLE(5),36(3,R7)  ASCBASID
         TR    DOUBLE(4),HEXTAB-240
         MVC   LINE+05(4),DOUBLE
         MVC   LINE+10(3),=C'JOB'
         L     R1,172(,R7)         ASCBJBNI
         LTR   R1,R1               IS IT A JOB
         BNZ   MOVENAME            YES, GO MOVE JOB NAME
         MVC   LINE+10(3),=C'STC'
         L     R1,176(,R7)         ASCBJBNS
         L     R0,60(,R7)          ASCBTSB
         LTR   R0,R0               IS IT TSO
         BZ    MOVESTC             NO, GO MOVE STC NAME
         MVC   LINE+10(3),=C'TSU'
         LTR   R1,R1               IS THERE A USERID
         BNZ   MOVENAME            YES, GO MOVE USERID
         LA    R1,=CL8'STARTING'
MOVENAME MVC   LINE+14(8),0(R1)
         B     XWTOR
MOVESTC  MVC   LINE+14(8),0(R1)
         CLC   0(8,R1),=CL8'*MASTER*'
         BE    NEXTASCB
         CLC   0(8,R1),=CL8'JES2'
         BE    NEXTASCB
*
*               WTOR AND GET REPLY FROM OPERATOR
*
XWTOR    MVC   LINE+23(23),=C'REPLY U TO CONTINUE    '
         MVC   WTOW(12),WTOR       COPY MODEL WTOR
         MVC   WTOW+12(46),LINE    PUT NEW TEXT IN WTOR MESSAGE
         LH    R14,WTOR+8          GET LENGTH+4 OF MODEL TEXT
         LA    R14,WTOR+8(R14)     ROUTCDE IN MODEL WTOR
         LA    R15,46+4            GET LENGTH+4 OF NEW TEXT
         STH   R15,WTOW+8          SET NEW LENGTH
         LA    R15,WTOW+8(R15)     POINT PAST NEW TEXT
         MVC   0(4,R15),0(R14)     COPY ROUTCDE
REPEAT   XC    REPLY,REPLY
         XC    ECB,ECB
         LA    R1,WTOW
         WTOR  ,REPLY,,ECB,MF=(E,(1))
         WAIT  ECB=ECB
         OI    REPLY,X'40'         CAPS
         CLI   REPLY,C'U'
         BE    NEXTASCB
         CLI   REPLY,C'S'          SET IT CANCELABLE
         BE    SETCANCL
         B     REPEAT
SETCANCL EQU   *
         MODESET KEY=ZERO
         OI    7(R8),X'08'         MARK IT CANCELABLE
         MODESET KEY=NZERO
         B     NEXTASCB
NEXTASCB LA    R6,4(,R6)           POINT TO NEXT ASCB POINTER
         LA    R4,1(,R4)           INCREMENT ASID
         BCT   R5,LOOP
         B     EXIT0
         SPACE
************************************************************
*                                                          *
*         TERMINATE                                        *
*                                                          *
************************************************************
         SPACE
ERROR    DC    H'0'                S0C1
EXIT0    EQU   *
         LH    R15,RC
EXIT     LR    1,13
         L     R0,@SIZE
         L     13,4(,13)
         LR    R2,R15
         FREEMAIN R,A=(1),LV=(0)
         LR    R15,R2
         LM    0,12,20(R13)
         L     14,12(,R13)
         BR    14
         SPACE
************************************************************
*                                                          *
*        CONSTANTS                                         *
*                                                          *
************************************************************
         SPACE
VERMSG   DC    C'(YES OR NO)'
HEXTAB   DC    C'0123456789ABCDEF'
WTO      WTO   'OKAY',ROUTCDE=(1,8),MF=L
WTOR     WTOR  'WHY?',@REPLY,3,@ECB,ROUTCDE=(1,8),MF=L
@REPLY   EQU   1
@ECB     EQU   1
         LTORG
         DC    0D'0'               END OF CSECT
         SPACE
************************************************************
*                                                          *
*        DSECTS                                            *
*                                                          *
************************************************************
         SPACE
@DATA    DSECT
         DS    18F                 REGISTER SAVEAREA
DOUBLE   DS    D
SAVEREGS DS    16F
REGBTERM DS    18F
LINKAREA DS    2F
ECB      DS    F
RC       DS    H
UNIT     DS    H
TRMID    DS    CL8
REPLY    DS    CL3
OPTIONS  DS    C
OPTCAN   EQU   X'80'
         DS    0F
LINEM1   DS    C                  LINE-1
LINE     DS    CL79
WTOW     DS    0F,CL80
         DS    0D
@DATAL   EQU   *-@DATA
         SPACE
*        CVT
CVTMAP   DSECT
CVTBTERM EQU   CVTMAP+X'34'
         SPACE 2
R0       EQU   0
R1       EQU   1
R2       EQU   2
R3       EQU   3
R4       EQU   4
R5       EQU   5
R6       EQU   6
R7       EQU   7
R8       EQU   8
R9       EQU   9
R10      EQU   10
R11      EQU   11
R12      EQU   12
R13      EQU   13
R14      EQU   14
R15      EQU   15
         END
